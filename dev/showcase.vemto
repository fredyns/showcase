{"tables":{"basicrelationships":{"basicrelationships":{"count":112,"lastPrimaryKey":206,"index":{"1":{"hasMany":{"basicrelationships.inverseId":[2],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"basicrelationships.inverseId":[1],"hasmanydetails.relationshipId":[16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"basicrelationships.inverseId":[10],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{"basicrelationships.inverseId":[9],"hasmanydetails.relationshipId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"basicrelationships.inverseId":[12],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"basicrelationships.inverseId":[11],"hasmanydetails.relationshipId":[32]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"basicrelationships.inverseId":[14],"hasmanydetails.relationshipId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"basicrelationships.inverseId":[13],"inputs.relationshipId":[693]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"basicrelationships.inverseId":[18],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{"basicrelationships.inverseId":[17],"hasmanydetails.relationshipId":[47]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"basicrelationships.inverseId":[20],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"basicrelationships.inverseId":[19],"hasmanydetails.relationshipId":[48]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"basicrelationships.inverseId":[22],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"basicrelationships.inverseId":[21],"hasmanydetails.relationshipId":[49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{"basicrelationships.inverseId":[24],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"basicrelationships.inverseId":[23],"hasmanydetails.relationshipId":[50]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"basicrelationships.inverseId":[32],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{"basicrelationships.inverseId":[31],"hasmanydetails.relationshipId":[17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{"basicrelationships.inverseId":[54],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"basicrelationships.inverseId":[53],"hasmanydetails.relationshipId":[51]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{"basicrelationships.inverseId":[60]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{"basicrelationships.inverseId":[59],"inputs.relationshipId":[327]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{"basicrelationships.inverseId":[66]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"66":{"hasMany":{"basicrelationships.inverseId":[65],"inputs.relationshipId":[330]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{"basicrelationships.inverseId":[68]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"68":{"hasMany":{"basicrelationships.inverseId":[67],"inputs.relationshipId":[331]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{"basicrelationships.inverseId":[72]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{"basicrelationships.inverseId":[71],"inputs.relationshipId":[277,710]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{"basicrelationships.inverseId":[88]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{"basicrelationships.inverseId":[87],"inputs.relationshipId":[437]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"95":{"hasMany":{"basicrelationships.inverseId":[96]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"96":{"hasMany":{"basicrelationships.inverseId":[95],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"97":{"hasMany":{"basicrelationships.inverseId":[98]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"98":{"hasMany":{"basicrelationships.inverseId":[97],"inputs.relationshipId":[284]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"107":{"hasMany":{"basicrelationships.inverseId":[108]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"108":{"hasMany":{"basicrelationships.inverseId":[107],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"109":{"hasMany":{"basicrelationships.inverseId":[110]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"110":{"hasMany":{"basicrelationships.inverseId":[109],"inputs.relationshipId":[328]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"113":{"hasMany":{"basicrelationships.inverseId":[114],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"114":{"hasMany":{"basicrelationships.inverseId":[113],"hasmanydetails.relationshipId":[36]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{"basicrelationships.inverseId":[120],"hasmanydetails.relationshipId":[39]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"120":{"hasMany":{"basicrelationships.inverseId":[119],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{"basicrelationships.inverseId":[122],"hasmanydetails.relationshipId":[40]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"122":{"hasMany":{"basicrelationships.inverseId":[121],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{"basicrelationships.inverseId":[124],"hasmanydetails.relationshipId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"124":{"hasMany":{"basicrelationships.inverseId":[123],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"125":{"hasMany":{"basicrelationships.inverseId":[126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"126":{"hasMany":{"basicrelationships.inverseId":[125],"inputs.relationshipId":[471]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{"basicrelationships.inverseId":[128],"hasmanydetails.relationshipId":[42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{"basicrelationships.inverseId":[127],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{"basicrelationships.inverseId":[130]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{"basicrelationships.inverseId":[129],"inputs.relationshipId":[478]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{"basicrelationships.inverseId":[132]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{"basicrelationships.inverseId":[131],"inputs.relationshipId":[483]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"133":{"hasMany":{"basicrelationships.inverseId":[134],"hasmanydetails.relationshipId":[45]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"134":{"hasMany":{"basicrelationships.inverseId":[133],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"137":{"hasMany":{"basicrelationships.inverseId":[138],"hasmanydetails.relationshipId":[46]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"138":{"hasMany":{"basicrelationships.inverseId":[137],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"141":{"hasMany":{"basicrelationships.inverseId":[142]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"142":{"hasMany":{"basicrelationships.inverseId":[141],"inputs.relationshipId":[499]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"143":{"hasMany":{"basicrelationships.inverseId":[144]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"144":{"hasMany":{"basicrelationships.inverseId":[143],"inputs.relationshipId":[609,719]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"145":{"hasMany":{"basicrelationships.inverseId":[146],"hasmanydetails.relationshipId":[52]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"146":{"hasMany":{"basicrelationships.inverseId":[145],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"147":{"hasMany":{"basicrelationships.inverseId":[148]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"148":{"hasMany":{"basicrelationships.inverseId":[147],"inputs.relationshipId":[721]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"149":{"hasMany":{"basicrelationships.inverseId":[150]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"150":{"hasMany":{"basicrelationships.inverseId":[149],"inputs.relationshipId":[506]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"151":{"hasMany":{"basicrelationships.inverseId":[152],"inputs.relationshipId":[510]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"152":{"hasMany":{"basicrelationships.inverseId":[151]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"153":{"hasMany":{"basicrelationships.inverseId":[154],"inputs.relationshipId":[515]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"154":{"hasMany":{"basicrelationships.inverseId":[153]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"155":{"hasMany":{"basicrelationships.inverseId":[156],"inputs.relationshipId":[516]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"156":{"hasMany":{"basicrelationships.inverseId":[155]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"157":{"hasMany":{"basicrelationships.inverseId":[158],"inputs.relationshipId":[517]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"158":{"hasMany":{"basicrelationships.inverseId":[157]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"159":{"hasMany":{"basicrelationships.inverseId":[160],"inputs.relationshipId":[518]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"160":{"hasMany":{"basicrelationships.inverseId":[159]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"161":{"hasMany":{"basicrelationships.inverseId":[162],"inputs.relationshipId":[519]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"162":{"hasMany":{"basicrelationships.inverseId":[161]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"163":{"hasMany":{"basicrelationships.inverseId":[164],"inputs.relationshipId":[520]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"164":{"hasMany":{"basicrelationships.inverseId":[163]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"165":{"hasMany":{"basicrelationships.inverseId":[166],"inputs.relationshipId":[521]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"166":{"hasMany":{"basicrelationships.inverseId":[165]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"167":{"hasMany":{"basicrelationships.inverseId":[168],"inputs.relationshipId":[522]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"168":{"hasMany":{"basicrelationships.inverseId":[167]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"169":{"hasMany":{"basicrelationships.inverseId":[170],"inputs.relationshipId":[528]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"170":{"hasMany":{"basicrelationships.inverseId":[169]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"171":{"hasMany":{"basicrelationships.inverseId":[172],"inputs.relationshipId":[529]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"172":{"hasMany":{"basicrelationships.inverseId":[171]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"173":{"hasMany":{"basicrelationships.inverseId":[174],"inputs.relationshipId":[530]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"174":{"hasMany":{"basicrelationships.inverseId":[173]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"175":{"hasMany":{"basicrelationships.inverseId":[176],"inputs.relationshipId":[531]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"176":{"hasMany":{"basicrelationships.inverseId":[175]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"177":{"hasMany":{"basicrelationships.inverseId":[178],"inputs.relationshipId":[532]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"178":{"hasMany":{"basicrelationships.inverseId":[177]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"179":{"hasMany":{"basicrelationships.inverseId":[180],"inputs.relationshipId":[533]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"180":{"hasMany":{"basicrelationships.inverseId":[179]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"181":{"hasMany":{"basicrelationships.inverseId":[182],"inputs.relationshipId":[534]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"182":{"hasMany":{"basicrelationships.inverseId":[181]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"183":{"hasMany":{"basicrelationships.inverseId":[184],"inputs.relationshipId":[535]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"184":{"hasMany":{"basicrelationships.inverseId":[183]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"195":{"hasMany":{"basicrelationships.inverseId":[196]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"196":{"hasMany":{"basicrelationships.inverseId":[195],"inputs.relationshipId":[799,804]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"197":{"hasMany":{"basicrelationships.inverseId":[198],"hasmanydetails.relationshipId":[57]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"198":{"hasMany":{"basicrelationships.inverseId":[197],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"201":{"hasMany":{"basicrelationships.inverseId":[202],"hasmanydetails.relationshipId":[59]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"202":{"hasMany":{"basicrelationships.inverseId":[201],"inputs.relationshipId":[782]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"203":{"hasMany":{"basicrelationships.inverseId":[204],"hasmanydetails.relationshipId":[60]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"204":{"hasMany":{"basicrelationships.inverseId":[203],"inputs.relationshipId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"205":{"hasMany":{"basicrelationships.inverseId":[206],"hasmanydetails.relationshipId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"206":{"hasMany":{"basicrelationships.inverseId":[205],"inputs.relationshipId":[800]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"cruds":{"cruds":{"count":52,"lastPrimaryKey":114,"index":{"1":{"hasMany":{"inputs.crudId":[1,2,3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"inputs.crudId":[4,5,72,71,267,43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"inputs.crudId":[10],"hasmanydetails.crudId":[16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{"inputs.crudId":[110],"hasmanydetails.crudId":[17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{"inputs.crudId":[113]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{"inputs.crudId":[115,116,117,118,119,120,121,122,707,123,124,139,126,127,128,129,130,140,141,142,143,144,145],"hasmanydetails.crudId":[19,21,39,40,47,48,50,49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{"inputs.crudId":[158,159,160,164,165],"hasmanydetails.crudId":[32]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{"inputs.crudId":[172,174],"hasmanydetails.crudId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{"inputs.crudId":[282,279,280,277,278,609,605,606]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{"inputs.crudId":[284,285,706],"hasmanydetails.crudId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"inputs.crudId":[327,328,330,331,332,506],"hasmanydetails.crudId":[36,41,42,52]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{"inputs.crudId":[692]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{"inputs.crudId":[437,439,438,442,441,440]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{"inputs.crudId":[461,464,463,462]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{"inputs.crudId":[466,467,468,469]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{"inputs.crudId":[471,472,473,476,475,474]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"66":{"hasMany":{"inputs.crudId":[478,480,481,482,479]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{"inputs.crudId":[484,483],"hasmanydetails.crudId":[45]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{"inputs.crudId":[495],"hasmanydetails.crudId":[46]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{"inputs.crudId":[497,501,499,500]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{"inputs.crudId":[507,508,509]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{"inputs.crudId":[511,512,513,514]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{"inputs.crudId":[523,524,525,526,527,510]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{"inputs.crudId":[536,537,538]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"77":{"hasMany":{"inputs.crudId":[539,540,541,542,515,528]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"78":{"hasMany":{"inputs.crudId":[543,544,545,546,547,516,529]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"79":{"hasMany":{"inputs.crudId":[548,549,550,551,552,553,518,531]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"80":{"hasMany":{"inputs.crudId":[554,555,556,557,558,559,560,561,562,563,564,565,517,530]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"81":{"hasMany":{"inputs.crudId":[566,567,568,569,570,571,572,573,574,519,532]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"82":{"hasMany":{"inputs.crudId":[575,576,577,578,579,580,520,533]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{"inputs.crudId":[581,582,583,584,585,586,587,588,589,521,534]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{"inputs.crudId":[590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,522,535]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{"inputs.crudId":[612,613,614,615,616,617,618,619,611]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{"inputs.crudId":[621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{"inputs.crudId":[684,685,686,687]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{"inputs.crudId":[689,690,691]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"89":{"hasMany":{"inputs.crudId":[693,694,695],"hasmanydetails.crudId":[51]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"90":{"hasMany":{"inputs.crudId":[697,698,699,700,701,702,703,704,705]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"91":{"hasMany":{"inputs.crudId":[708,709,710,711,712,713,714,715,716,719,721,724,725,726,727,728,729,730,717,718,723,722]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"92":{"hasMany":{"inputs.crudId":[733,734,735,736,737]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"98":{"hasMany":{"inputs.crudId":[753,754,755,756],"manytomanydetails.crudId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"99":{"hasMany":{"inputs.crudId":[758]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"100":{"hasMany":{"inputs.crudId":[759,761,762,760],"hasmanydetails.crudId":[57,59],"manytomanydetails.crudId":[4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{"inputs.crudId":[770]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"105":{"hasMany":{"inputs.crudId":[775,777,776]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"106":{"hasMany":{"inputs.crudId":[779,782,780,781],"hasmanydetails.crudId":[60,61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"107":{"hasMany":{"inputs.crudId":[784,786,793,794]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"109":{"hasMany":{"inputs.crudId":[791]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"110":{"hasMany":{"inputs.crudId":[796,798,799,797]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"111":{"hasMany":{"inputs.crudId":[800,801,803,804,802]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"112":{"hasMany":{"inputs.crudId":[805,806,807]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"114":{"hasMany":{"inputs.crudId":[818,819,821,822,823,824,825,820,827,826]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_112":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Users","url":"users","modelId":76,"projectId":8,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Users List","create":"Create User","edit":"Edit User","update":"Update User","show":"Show User","new":"New User"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":112,"createdAt":"2022-03-07 06:06:47","updatedAt":"2022-03-07 06:06:47"},"item_114":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Entries","url":"entries","modelId":77,"projectId":8,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Entries List","create":"Create Entry","edit":"Edit Entry","update":"Update Entry","show":"Show Entry","new":"New Entry"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":114,"createdAt":"2022-03-07 06:12:32","updatedAt":"2022-03-07 06:12:32"}},"entities":{"entities":{"count":47,"lastPrimaryKey":77,"index":{"1":{"hasMany":{"fields.entityId":[1,2,3,4,5,6,7,8,9,10],"projects.authModelId":[1],"cruds.modelId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"fields.entityId":[12,13,14,15,23,53,392],"cruds.modelId":[2],"basicrelationships.localModelId":[71],"basicrelationships.modelId":[72],"foreigns.relatedEntityId":[34]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"fields.entityId":[17,18],"foreigns.relatedEntityId":[1,31,32],"basicrelationships.modelId":[1,66,68],"basicrelationships.localModelId":[2,67,65],"cruds.modelId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"fields.entityId":[19,20,22],"foreigns.relatedEntityId":[15,53],"basicrelationships.localModelId":[1,32,109],"basicrelationships.modelId":[2,31,110],"cruds.modelId":[32]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"fields.entityId":[24,210,377],"basicrelationships.localModelId":[31,143],"basicrelationships.modelId":[32,144],"cruds.modelId":[33],"foreigns.relatedEntityId":[70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{"fields.entityId":[28,29,38,30,31,176,32,34,35,709,36,37,39,40,41,48,49,50,71,54,55,72,73,714,715,74,718,719,523,522,520,521,519,518],"foreigns.relatedEntityId":[59,4,8,9,10,58,64,47,29,6,11],"basicrelationships.localModelId":[10,13,18,20,22,24,59,97,119,121,131],"basicrelationships.modelId":[9,14,17,19,21,23,60,98,120,122,132],"cruds.modelId":[34]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"fields.entityId":[42,44,45,46,177,62,56,525,716,717,524],"basicrelationships.modelId":[10,11,88],"basicrelationships.localModelId":[9,12,87],"foreigns.relatedEntityId":[5,42],"cruds.modelId":[36]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"fields.entityId":[51,52,703,720,710,713,712,711],"basicrelationships.localModelId":[11,141],"basicrelationships.modelId":[12,142],"cruds.modelId":[56],"foreigns.relatedEntityId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"fields.entityId":[67,69,68,77],"basicrelationships.modelId":[13,53,96],"basicrelationships.localModelId":[14,54,95],"foreigns.relatedEntityId":[46,26],"cruds.modelId":[38,89]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{"fields.entityId":[78,378,80,84,88,87,86,85,83,82,81],"basicrelationships.localModelId":[53],"basicrelationships.modelId":[54],"cruds.modelId":[90]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"fields.entityId":[90,91,92,93,94,95,96,97,98,99,100],"basicrelationships.localModelId":[17],"basicrelationships.modelId":[18],"cruds.modelId":[85]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"fields.entityId":[101,102,104,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,103],"basicrelationships.localModelId":[19],"basicrelationships.modelId":[20],"cruds.modelId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"fields.entityId":[165,166,167,168,169,170],"basicrelationships.localModelId":[21],"basicrelationships.modelId":[22],"cruds.modelId":[87]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"fields.entityId":[171,172,173,174,175],"basicrelationships.localModelId":[23],"basicrelationships.modelId":[24],"cruds.modelId":[88]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{"fields.entityId":[407,380,487,441,382,384,387,590,388,443,444,457,458,721,445,446,447,448,449,450,451,452,453,454,455,456,459,460,461,462,463,464,465,466,467,468,469,470,471,473,474,475,477,478,479,480,481,482,483,484,485,486,488,489,490,491,492,493,495,497,723,724,722],"foreigns.relatedEntityId":[62,55,60,71],"basicrelationships.modelId":[67,65,59,107,109,113,124,128,146,149],"basicrelationships.localModelId":[60,66,68,108,110,114,123,127,145,150],"cruds.modelId":[52]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{"fields.entityId":[398,435,390,394,393,588,589,395,417,571,573,575,578,579,581,582,583,584,585,586,587,577,576],"foreigns.relatedEntityId":[],"basicrelationships.modelId":[71,143,145,147],"basicrelationships.localModelId":[72,144,146,148],"cruds.modelId":[45,91]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{"fields.entityId":[405,515,408,503,504,505,507,506],"foreigns.relatedEntityId":[72],"basicrelationships.modelId":[87,114,148],"basicrelationships.localModelId":[88,113,147],"cruds.modelId":[60,92]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"fields.entityId":[411,414,415,436,437,438,439,708,707,440],"basicrelationships.modelId":[95],"basicrelationships.localModelId":[96],"cruds.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{"fields.entityId":[418,419,420,704],"basicrelationships.modelId":[97,108],"basicrelationships.localModelId":[98,107],"foreigns.relatedEntityId":[52],"cruds.modelId":[46]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{"fields.entityId":[526,528,530,531,532,527],"basicrelationships.modelId":[119,126],"basicrelationships.localModelId":[120,125],"cruds.modelId":[63],"foreigns.relatedEntityId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{"fields.entityId":[533,535,536,537,538,534],"basicrelationships.modelId":[121,130],"basicrelationships.localModelId":[122,129],"cruds.modelId":[64],"foreigns.relatedEntityId":[63]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"47":{"hasMany":{"fields.entityId":[540,543,544,545,546,547,541,542],"basicrelationships.modelId":[123,125],"basicrelationships.localModelId":[124,126],"cruds.modelId":[65]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"48":{"hasMany":{"fields.entityId":[548,552,553,554,549,550,551],"basicrelationships.modelId":[127,129],"basicrelationships.localModelId":[128,130],"cruds.modelId":[66]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{"fields.entityId":[555,557,556],"basicrelationships.modelId":[131,134,150],"basicrelationships.localModelId":[132,133,149],"foreigns.relatedEntityId":[65,73],"cruds.modelId":[67]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"50":{"hasMany":{"fields.entityId":[558,560,559],"basicrelationships.modelId":[138,133],"basicrelationships.localModelId":[134,137],"foreigns.relatedEntityId":[67],"cruds.modelId":[70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"51":{"hasMany":{"fields.entityId":[561,562,563,570,565,567],"basicrelationships.modelId":[141,137],"basicrelationships.localModelId":[138,142],"cruds.modelId":[71]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"fields.entityId":[591,592,593,594,595,596],"projects.authModelId":[5],"cruds.modelId":[73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{"fields.entityId":[597,598,599,600,601],"foreigns.relatedEntityId":[74],"basicrelationships.localModelId":[152],"basicrelationships.modelId":[151],"cruds.modelId":[74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"fields.entityId":[602,603,604,605,606,607,608],"basicrelationships.modelId":[152,153,155,157,159,161,163,165,167],"basicrelationships.localModelId":[151,154,156,158,160,162,164,166,168],"cruds.modelId":[75],"foreigns.relatedEntityId":[75,76,77,78,79,80,81,82]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{"fields.entityId":[609,610,611,612],"foreigns.relatedEntityId":[83,84,85,86,87,88,89,90],"basicrelationships.localModelId":[170,172,174,176,178,180,182,184],"basicrelationships.modelId":[169,171,173,175,177,179,181,183],"cruds.modelId":[76]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{"fields.entityId":[613,614,615,616,617,618,619],"basicrelationships.modelId":[154,170],"basicrelationships.localModelId":[153,169],"cruds.modelId":[77]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"fields.entityId":[620,621,622,623,624,625,626,627],"basicrelationships.modelId":[156,172],"basicrelationships.localModelId":[155,171],"cruds.modelId":[78]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"58":{"hasMany":{"fields.entityId":[628,629,630,631,632,633,634,635,636],"basicrelationships.modelId":[176,160],"basicrelationships.localModelId":[175,159],"cruds.modelId":[79]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{"fields.entityId":[637,638,639,640,641,642,643,644,645,646,647,648,649,650,651],"basicrelationships.modelId":[174,158],"basicrelationships.localModelId":[173,157],"cruds.modelId":[80]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{"fields.entityId":[652,653,654,655,656,657,658,659,660,661,662,663],"basicrelationships.modelId":[178,162],"basicrelationships.localModelId":[177,161],"cruds.modelId":[81]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"fields.entityId":[664,665,666,667,668,669,670,671,672],"basicrelationships.modelId":[180,164],"basicrelationships.localModelId":[179,163],"cruds.modelId":[82]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{"fields.entityId":[673,674,675,676,677,678,679,680,681,682,683,684],"basicrelationships.modelId":[182,166],"basicrelationships.localModelId":[181,165],"cruds.modelId":[83]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{"fields.entityId":[685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702],"basicrelationships.modelId":[184,168],"basicrelationships.localModelId":[183,167],"cruds.modelId":[84]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{"fields.entityId":[726,727,728,729,730,731,732,733,734,735],"projects.authModelId":[6],"foreigns.relatedEntityId":[102],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"manytomanyrelationships.modelId":[1],"manytomanyrelationships.localModelId":[2],"cruds.modelId":[98]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{"fields.entityId":[736,737,739,740,738],"foreigns.relatedEntityId":[99,103,97],"basicrelationships.localModelId":[201,197],"basicrelationships.modelId":[198,202],"cruds.modelId":[100],"manytomanyrelationships.localModelId":[1],"manytomanyrelationships.modelId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{"fields.entityId":[754,757,759,758,765,778],"basicrelationships.modelId":[205,195],"basicrelationships.localModelId":[196,206],"cruds.modelId":[110,111]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{"fields.entityId":[761,777,764,763,783,782],"basicrelationships.modelId":[196,203],"basicrelationships.localModelId":[204,195],"foreigns.relatedEntityId":[96],"cruds.modelId":[107]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{"fields.entityId":[766,767,768],"basicrelationships.modelId":[197],"basicrelationships.localModelId":[198],"cruds.modelId":[103]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{"fields.entityId":[772,773,774,775,776],"basicrelationships.modelId":[204,206,201],"basicrelationships.localModelId":[202,203,205],"foreigns.relatedEntityId":[100,101],"cruds.modelId":[105,106]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{"fields.entityId":[781,779,780],"manytomanyrelationships.pivotId":[2,1],"cruds.modelId":[99,109]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{"fields.entityId":[794,795,796,797,798,799,800,801,802,803],"projects.authModelId":[8],"cruds.modelId":[112]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"77":{"hasMany":{"fields.entityId":[804,805,813,814,809,807,812,810,806,811,808],"cruds.modelId":[114]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_77":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Entry","type":"model","plural":"Entries","pluralAndSingularAreSame":false,"table":"entries","projectId":8,"top":"165px","left":"496px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2022_03_07_000001_create_entries_table.php","foreignsMigrationName":null,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":77,"createdAt":"2022-03-07 06:00:37","updatedAt":"2022-03-07 06:16:27"},"item_76":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":8,"name":"User","type":"model","table":"users","plural":"Users","top":"169px","left":"72px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2014_10_12_000000_create_users_table.php","foreignsMigrationName":null,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":76,"createdAt":"2022-03-07 05:54:32","updatedAt":"2022-03-07 06:16:27"}},"fields":{"fields":{"count":497,"lastPrimaryKey":815,"index":{"1":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"inputs.fieldId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"inputs.fieldId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"inputs.fieldId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"inputs.fieldId":[4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"inputs.fieldId":[5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"inputs.fieldId":[72]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"inputs.fieldId":[267]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"foreigns.relatedFieldId":[1,31,32],"basicrelationships.parentKeyId":[2,1,66,68,67,65]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{"inputs.fieldId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"foreigns.relatedFieldId":[15,53],"basicrelationships.parentKeyId":[32,31,110,109]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"foreigns.fieldId":[1],"basicrelationships.foreignKeyId":[2,1],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"inputs.fieldId":[110]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{"inputs.fieldId":[71]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"foreigns.relatedFieldId":[70],"basicrelationships.parentKeyId":[144,143]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{"foreigns.relatedFieldId":[59,4,8,9,10,58,64,47,29,6,11],"basicrelationships.parentKeyId":[10,9,14,13,17,19,21,23,60,98,18,20,22,24,59,97,120,119,122,121,132,131]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{"inputs.fieldId":[115]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{"inputs.fieldId":[117]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"inputs.fieldId":[118]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{"inputs.fieldId":[120]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{"inputs.fieldId":[121]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{"inputs.fieldId":[122]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{"inputs.fieldId":[123]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{"inputs.fieldId":[124]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{"inputs.fieldId":[116]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{"inputs.fieldId":[139]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{"inputs.fieldId":[126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"inputs.fieldId":[127]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{"foreigns.relatedFieldId":[5,42],"basicrelationships.parentKeyId":[12,11,88,87]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{"foreigns.fieldId":[4],"basicrelationships.foreignKeyId":[10,9],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{"inputs.fieldId":[158]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{"inputs.fieldId":[159]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"48":{"hasMany":{"inputs.fieldId":[128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{"inputs.fieldId":[129]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"50":{"hasMany":{"inputs.fieldId":[130]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"51":{"hasMany":{"foreigns.relatedFieldId":[69],"basicrelationships.parentKeyId":[142,141]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"foreigns.fieldId":[5],"basicrelationships.foreignKeyId":[12,11],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{"inputs.fieldId":[43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"inputs.fieldId":[141]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{"inputs.fieldId":[142]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{"inputs.fieldId":[165]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{"inputs.fieldId":[164]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{"foreigns.relatedFieldId":[46,26],"basicrelationships.parentKeyId":[54,53,96,95]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"68":{"hasMany":{"inputs.fieldId":[172,694]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{"foreigns.fieldId":[6],"basicrelationships.foreignKeyId":[14,13],"inputs.fieldId":[693]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{"inputs.fieldId":[140]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{"inputs.fieldId":[143]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{"inputs.fieldId":[144]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{"inputs.fieldId":[145]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"77":{"hasMany":{"inputs.fieldId":[174,695]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"78":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"80":{"hasMany":{"inputs.fieldId":[697]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"81":{"hasMany":{"inputs.fieldId":[698]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"82":{"hasMany":{"inputs.fieldId":[699]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{"inputs.fieldId":[700]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{"inputs.fieldId":[701]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{"inputs.fieldId":[702]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{"inputs.fieldId":[703]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{"inputs.fieldId":[704]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{"inputs.fieldId":[705]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"90":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"91":{"hasMany":{"foreigns.fieldId":[8],"basicrelationships.foreignKeyId":[17,18],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"92":{"hasMany":{"inputs.fieldId":[611]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"93":{"hasMany":{"inputs.fieldId":[612]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"94":{"hasMany":{"inputs.fieldId":[613]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"95":{"hasMany":{"inputs.fieldId":[614]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"96":{"hasMany":{"inputs.fieldId":[615]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"97":{"hasMany":{"inputs.fieldId":[616]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"98":{"hasMany":{"inputs.fieldId":[617]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"99":{"hasMany":{"inputs.fieldId":[618]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"100":{"hasMany":{"inputs.fieldId":[619]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{"foreigns.fieldId":[9],"basicrelationships.foreignKeyId":[19,20],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{"inputs.fieldId":[621]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"104":{"hasMany":{"inputs.fieldId":[622]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"105":{"hasMany":{"inputs.fieldId":[623]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"106":{"hasMany":{"inputs.fieldId":[624]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"107":{"hasMany":{"inputs.fieldId":[625]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"108":{"hasMany":{"inputs.fieldId":[626]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"109":{"hasMany":{"inputs.fieldId":[627]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"110":{"hasMany":{"inputs.fieldId":[628]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"111":{"hasMany":{"inputs.fieldId":[629]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"112":{"hasMany":{"inputs.fieldId":[630]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"113":{"hasMany":{"inputs.fieldId":[631]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"114":{"hasMany":{"inputs.fieldId":[632]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"115":{"hasMany":{"inputs.fieldId":[633]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"116":{"hasMany":{"inputs.fieldId":[634]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"117":{"hasMany":{"inputs.fieldId":[635]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"118":{"hasMany":{"inputs.fieldId":[636]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{"inputs.fieldId":[637]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"120":{"hasMany":{"inputs.fieldId":[638]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{"inputs.fieldId":[639]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"122":{"hasMany":{"inputs.fieldId":[640]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{"inputs.fieldId":[641]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"124":{"hasMany":{"inputs.fieldId":[642]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"125":{"hasMany":{"inputs.fieldId":[643]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"126":{"hasMany":{"inputs.fieldId":[644]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{"inputs.fieldId":[645]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{"inputs.fieldId":[646]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{"inputs.fieldId":[647]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{"inputs.fieldId":[648]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{"inputs.fieldId":[649]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{"inputs.fieldId":[650]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"133":{"hasMany":{"inputs.fieldId":[651]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"134":{"hasMany":{"inputs.fieldId":[652]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"135":{"hasMany":{"inputs.fieldId":[653]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"136":{"hasMany":{"inputs.fieldId":[654]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"137":{"hasMany":{"inputs.fieldId":[655]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"138":{"hasMany":{"inputs.fieldId":[656]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"139":{"hasMany":{"inputs.fieldId":[657]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"140":{"hasMany":{"inputs.fieldId":[658]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"141":{"hasMany":{"inputs.fieldId":[659]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"142":{"hasMany":{"inputs.fieldId":[660]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"143":{"hasMany":{"inputs.fieldId":[661]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"144":{"hasMany":{"inputs.fieldId":[662]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"145":{"hasMany":{"inputs.fieldId":[663]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"146":{"hasMany":{"inputs.fieldId":[664]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"147":{"hasMany":{"inputs.fieldId":[665]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"148":{"hasMany":{"inputs.fieldId":[666]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"149":{"hasMany":{"inputs.fieldId":[667]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"150":{"hasMany":{"inputs.fieldId":[668]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"151":{"hasMany":{"inputs.fieldId":[669]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"152":{"hasMany":{"inputs.fieldId":[670]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"153":{"hasMany":{"inputs.fieldId":[671]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"154":{"hasMany":{"inputs.fieldId":[672]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"155":{"hasMany":{"inputs.fieldId":[673]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"156":{"hasMany":{"inputs.fieldId":[674]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"157":{"hasMany":{"inputs.fieldId":[675]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"158":{"hasMany":{"inputs.fieldId":[676]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"159":{"hasMany":{"inputs.fieldId":[677]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"160":{"hasMany":{"inputs.fieldId":[678]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"161":{"hasMany":{"inputs.fieldId":[679]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"162":{"hasMany":{"inputs.fieldId":[680]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"163":{"hasMany":{"inputs.fieldId":[681]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"164":{"hasMany":{"inputs.fieldId":[682]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"165":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"166":{"hasMany":{"foreigns.fieldId":[10],"basicrelationships.foreignKeyId":[21,22],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"167":{"hasMany":{"inputs.fieldId":[684]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"168":{"hasMany":{"inputs.fieldId":[685]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"169":{"hasMany":{"inputs.fieldId":[686]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"170":{"hasMany":{"inputs.fieldId":[687]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"171":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"172":{"hasMany":{"foreigns.fieldId":[11],"basicrelationships.foreignKeyId":[23,24],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"173":{"hasMany":{"inputs.fieldId":[689]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"174":{"hasMany":{"inputs.fieldId":[690]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"175":{"hasMany":{"inputs.fieldId":[691]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"176":{"hasMany":{"inputs.fieldId":[119]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"177":{"hasMany":{"inputs.fieldId":[160]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"210":{"hasMany":{"foreigns.fieldId":[15],"basicrelationships.foreignKeyId":[32,31],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"377":{"hasMany":{"inputs.fieldId":[113]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"378":{"hasMany":{"foreigns.fieldId":[26],"basicrelationships.foreignKeyId":[54,53],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"380":{"hasMany":{"foreigns.fieldId":[29],"basicrelationships.foreignKeyId":[60,59],"inputs.fieldId":[327]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"382":{"hasMany":{"foreigns.fieldId":[31],"basicrelationships.foreignKeyId":[66,65],"inputs.fieldId":[330]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"384":{"hasMany":{"foreigns.fieldId":[32],"basicrelationships.foreignKeyId":[68,67],"inputs.fieldId":[331]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"387":{"hasMany":{"inputs.fieldId":[332]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"388":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"390":{"hasMany":{"foreigns.fieldId":[34],"basicrelationships.foreignKeyId":[72,71],"inputs.fieldId":[277,710]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"392":{"hasMany":{"foreigns.relatedFieldId":[34],"basicrelationships.parentKeyId":[72,71]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"393":{"hasMany":{"inputs.fieldId":[278,712]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"394":{"hasMany":{"inputs.fieldId":[279,711]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"395":{"hasMany":{"inputs.fieldId":[280,715]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"398":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[],"inputs.fieldId":[708]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"405":{"hasMany":{"foreigns.relatedFieldId":[72],"basicrelationships.parentKeyId":[148,147]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"407":{"hasMany":{"foreigns.relatedFieldId":[62,55,60,71],"basicrelationships.parentKeyId":[114,113,124,123,128,127,146,145],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"408":{"hasMany":{"foreigns.fieldId":[42],"basicrelationships.foreignKeyId":[88,87],"inputs.fieldId":[437]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"411":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"414":{"hasMany":{"foreigns.fieldId":[46],"basicrelationships.foreignKeyId":[96,95],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"415":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"417":{"hasMany":{"inputs.fieldId":[716]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"418":{"hasMany":{"foreigns.relatedFieldId":[52],"basicrelationships.parentKeyId":[108,107]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"419":{"hasMany":{"foreigns.fieldId":[47],"basicrelationships.foreignKeyId":[98,97],"inputs.fieldId":[284]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"420":{"hasMany":{"inputs.fieldId":[285]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"435":{"hasMany":{"inputs.fieldId":[282,709]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"436":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"437":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"438":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"439":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"440":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"441":{"hasMany":{"foreigns.fieldId":[52],"basicrelationships.foreignKeyId":[108,107],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"443":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"444":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"445":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"446":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"447":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"448":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"449":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"450":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"451":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"452":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"453":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"454":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"455":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"456":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"457":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"458":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"459":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"460":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"461":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"462":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"463":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"464":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"465":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"466":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"467":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"468":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"469":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"470":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"471":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"473":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"474":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"475":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"477":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"478":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"479":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"480":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"481":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"482":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"483":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"484":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"485":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"486":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"487":{"hasMany":{"foreigns.fieldId":[53],"basicrelationships.foreignKeyId":[110,109],"inputs.fieldId":[328]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"488":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"489":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"490":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"491":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"492":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"493":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"495":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"497":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"503":{"hasMany":{"inputs.fieldId":[438,733]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"504":{"hasMany":{"inputs.fieldId":[439,734]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"505":{"hasMany":{"inputs.fieldId":[440,735]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"506":{"hasMany":{"inputs.fieldId":[442,737]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"507":{"hasMany":{"inputs.fieldId":[441,736]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"515":{"hasMany":{"foreigns.fieldId":[55],"basicrelationships.foreignKeyId":[114,113],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"518":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"519":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"520":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"521":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"522":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"523":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"524":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"525":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"526":{"hasMany":{"foreigns.relatedFieldId":[61],"basicrelationships.parentKeyId":[126,125]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"527":{"hasMany":{"foreigns.fieldId":[58],"basicrelationships.foreignKeyId":[120,119],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"528":{"hasMany":{"inputs.fieldId":[461]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"530":{"hasMany":{"inputs.fieldId":[462]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"531":{"hasMany":{"inputs.fieldId":[463]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"532":{"hasMany":{"inputs.fieldId":[464]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"533":{"hasMany":{"foreigns.relatedFieldId":[63],"basicrelationships.parentKeyId":[130,129]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"534":{"hasMany":{"foreigns.fieldId":[59],"basicrelationships.foreignKeyId":[122,121],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"535":{"hasMany":{"inputs.fieldId":[466]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"536":{"hasMany":{"inputs.fieldId":[467]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"537":{"hasMany":{"inputs.fieldId":[468]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"538":{"hasMany":{"inputs.fieldId":[469]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"540":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"541":{"hasMany":{"foreigns.fieldId":[60],"basicrelationships.foreignKeyId":[124,123],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"542":{"hasMany":{"foreigns.fieldId":[61],"basicrelationships.foreignKeyId":[126,125],"inputs.fieldId":[471]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"543":{"hasMany":{"inputs.fieldId":[472]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"544":{"hasMany":{"inputs.fieldId":[473]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"545":{"hasMany":{"inputs.fieldId":[474]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"546":{"hasMany":{"inputs.fieldId":[475]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"547":{"hasMany":{"inputs.fieldId":[476]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"548":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"549":{"hasMany":{"foreigns.fieldId":[62],"basicrelationships.foreignKeyId":[128,127],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"550":{"hasMany":{"foreigns.fieldId":[63],"basicrelationships.foreignKeyId":[130,129],"inputs.fieldId":[478]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"551":{"hasMany":{"inputs.fieldId":[479]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"552":{"hasMany":{"inputs.fieldId":[480]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"553":{"hasMany":{"inputs.fieldId":[481]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"554":{"hasMany":{"inputs.fieldId":[482]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"555":{"hasMany":{"foreigns.relatedFieldId":[65,73],"basicrelationships.parentKeyId":[134,133,150,149]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"556":{"hasMany":{"foreigns.fieldId":[64],"basicrelationships.foreignKeyId":[132,131],"inputs.fieldId":[483]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"557":{"hasMany":{"inputs.fieldId":[484]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"558":{"hasMany":{"foreigns.relatedFieldId":[67],"basicrelationships.parentKeyId":[138,137]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"559":{"hasMany":{"foreigns.fieldId":[65],"basicrelationships.foreignKeyId":[134,133],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"560":{"hasMany":{"inputs.fieldId":[495]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"561":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"562":{"hasMany":{"foreigns.fieldId":[67],"basicrelationships.foreignKeyId":[138,137],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"563":{"hasMany":{"inputs.fieldId":[497]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"565":{"hasMany":{"foreigns.fieldId":[69],"basicrelationships.foreignKeyId":[142,141],"inputs.fieldId":[499]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"567":{"hasMany":{"inputs.fieldId":[500]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"570":{"hasMany":{"inputs.fieldId":[501]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"571":{"hasMany":{"foreigns.fieldId":[70],"basicrelationships.foreignKeyId":[144,143],"inputs.fieldId":[609,719]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"573":{"hasMany":{"foreigns.fieldId":[71],"basicrelationships.foreignKeyId":[146,145],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"575":{"hasMany":{"foreigns.fieldId":[72],"basicrelationships.foreignKeyId":[148,147],"inputs.fieldId":[721]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"576":{"hasMany":{"inputs.fieldId":[722]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"577":{"hasMany":{"inputs.fieldId":[723]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"578":{"hasMany":{"inputs.fieldId":[724]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"579":{"hasMany":{"inputs.fieldId":[725]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"581":{"hasMany":{"inputs.fieldId":[726]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"582":{"hasMany":{"inputs.fieldId":[727]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"583":{"hasMany":{"inputs.fieldId":[728]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"584":{"hasMany":{"inputs.fieldId":[729]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"585":{"hasMany":{"inputs.fieldId":[730]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"586":{"hasMany":{"inputs.fieldId":[605,717]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"587":{"hasMany":{"inputs.fieldId":[606,718]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"588":{"hasMany":{"inputs.fieldId":[713]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"589":{"hasMany":{"inputs.fieldId":[714]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"590":{"hasMany":{"foreigns.fieldId":[73],"basicrelationships.foreignKeyId":[150,149],"inputs.fieldId":[506]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"591":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"592":{"hasMany":{"inputs.fieldId":[507]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"593":{"hasMany":{"inputs.fieldId":[508]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"594":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"595":{"hasMany":{"inputs.fieldId":[509]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"596":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"597":{"hasMany":{"foreigns.relatedFieldId":[74],"basicrelationships.parentKeyId":[151,152]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"598":{"hasMany":{"inputs.fieldId":[511]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"599":{"hasMany":{"inputs.fieldId":[512]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"600":{"hasMany":{"inputs.fieldId":[513]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"601":{"hasMany":{"inputs.fieldId":[514]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"602":{"hasMany":{"foreigns.relatedFieldId":[75,76,77,78,79,80,81,82],"basicrelationships.parentKeyId":[153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"603":{"hasMany":{"inputs.fieldId":[523]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"604":{"hasMany":{"inputs.fieldId":[524]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"605":{"hasMany":{"inputs.fieldId":[525]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"606":{"hasMany":{"inputs.fieldId":[526]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"607":{"hasMany":{"inputs.fieldId":[527]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"608":{"hasMany":{"foreigns.fieldId":[74],"basicrelationships.foreignKeyId":[151,152],"inputs.fieldId":[510]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"609":{"hasMany":{"foreigns.relatedFieldId":[83,84,85,86,87,88,89,90],"basicrelationships.parentKeyId":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"610":{"hasMany":{"inputs.fieldId":[536]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"611":{"hasMany":{"inputs.fieldId":[537]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"612":{"hasMany":{"inputs.fieldId":[538]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"613":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"614":{"hasMany":{"inputs.fieldId":[539]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"615":{"hasMany":{"inputs.fieldId":[540]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"616":{"hasMany":{"inputs.fieldId":[541]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"617":{"hasMany":{"inputs.fieldId":[542]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"618":{"hasMany":{"foreigns.fieldId":[75],"basicrelationships.foreignKeyId":[153,154],"inputs.fieldId":[515]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"619":{"hasMany":{"foreigns.fieldId":[83],"basicrelationships.foreignKeyId":[169,170],"inputs.fieldId":[528]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"620":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"621":{"hasMany":{"inputs.fieldId":[543]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"622":{"hasMany":{"inputs.fieldId":[544]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"623":{"hasMany":{"inputs.fieldId":[545]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"624":{"hasMany":{"inputs.fieldId":[546]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"625":{"hasMany":{"inputs.fieldId":[547]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"626":{"hasMany":{"foreigns.fieldId":[76],"basicrelationships.foreignKeyId":[155,156],"inputs.fieldId":[516]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"627":{"hasMany":{"foreigns.fieldId":[84],"basicrelationships.foreignKeyId":[171,172],"inputs.fieldId":[529]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"628":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"629":{"hasMany":{"inputs.fieldId":[548]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"630":{"hasMany":{"inputs.fieldId":[549]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"631":{"hasMany":{"inputs.fieldId":[550]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"632":{"hasMany":{"inputs.fieldId":[551]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"633":{"hasMany":{"inputs.fieldId":[552]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"634":{"hasMany":{"inputs.fieldId":[553]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"635":{"hasMany":{"foreigns.fieldId":[86],"basicrelationships.foreignKeyId":[175,176],"inputs.fieldId":[531]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"636":{"hasMany":{"foreigns.fieldId":[78],"basicrelationships.foreignKeyId":[159,160],"inputs.fieldId":[518]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"637":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"638":{"hasMany":{"inputs.fieldId":[554]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"639":{"hasMany":{"inputs.fieldId":[555]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"640":{"hasMany":{"inputs.fieldId":[556]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"641":{"hasMany":{"inputs.fieldId":[557]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"642":{"hasMany":{"inputs.fieldId":[558]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"643":{"hasMany":{"inputs.fieldId":[559]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"644":{"hasMany":{"inputs.fieldId":[560]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"645":{"hasMany":{"inputs.fieldId":[561]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"646":{"hasMany":{"inputs.fieldId":[562]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"647":{"hasMany":{"inputs.fieldId":[563]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"648":{"hasMany":{"inputs.fieldId":[564]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"649":{"hasMany":{"inputs.fieldId":[565]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"650":{"hasMany":{"foreigns.fieldId":[85],"basicrelationships.foreignKeyId":[173,174],"inputs.fieldId":[530]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"651":{"hasMany":{"foreigns.fieldId":[77],"basicrelationships.foreignKeyId":[157,158],"inputs.fieldId":[517]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"652":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"653":{"hasMany":{"inputs.fieldId":[566]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"654":{"hasMany":{"inputs.fieldId":[567]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"655":{"hasMany":{"inputs.fieldId":[568]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"656":{"hasMany":{"inputs.fieldId":[569]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"657":{"hasMany":{"inputs.fieldId":[570]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"658":{"hasMany":{"inputs.fieldId":[571]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"659":{"hasMany":{"inputs.fieldId":[572]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"660":{"hasMany":{"inputs.fieldId":[573]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"661":{"hasMany":{"inputs.fieldId":[574]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"662":{"hasMany":{"foreigns.fieldId":[87],"basicrelationships.foreignKeyId":[177,178],"inputs.fieldId":[532]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"663":{"hasMany":{"foreigns.fieldId":[79],"basicrelationships.foreignKeyId":[161,162],"inputs.fieldId":[519]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"664":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"665":{"hasMany":{"inputs.fieldId":[575]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"666":{"hasMany":{"inputs.fieldId":[576]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"667":{"hasMany":{"inputs.fieldId":[577]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"668":{"hasMany":{"inputs.fieldId":[578]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"669":{"hasMany":{"inputs.fieldId":[579]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"670":{"hasMany":{"inputs.fieldId":[580]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"671":{"hasMany":{"foreigns.fieldId":[88],"basicrelationships.foreignKeyId":[179,180],"inputs.fieldId":[533]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"672":{"hasMany":{"foreigns.fieldId":[80],"basicrelationships.foreignKeyId":[163,164],"inputs.fieldId":[520]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"673":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"674":{"hasMany":{"inputs.fieldId":[581]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"675":{"hasMany":{"inputs.fieldId":[582]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"676":{"hasMany":{"inputs.fieldId":[583]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"677":{"hasMany":{"inputs.fieldId":[584]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"678":{"hasMany":{"inputs.fieldId":[585]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"679":{"hasMany":{"inputs.fieldId":[586]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"680":{"hasMany":{"inputs.fieldId":[587]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"681":{"hasMany":{"inputs.fieldId":[588]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"682":{"hasMany":{"inputs.fieldId":[589]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"683":{"hasMany":{"foreigns.fieldId":[89],"basicrelationships.foreignKeyId":[181,182],"inputs.fieldId":[534]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"684":{"hasMany":{"foreigns.fieldId":[81],"basicrelationships.foreignKeyId":[165,166],"inputs.fieldId":[521]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"685":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"686":{"hasMany":{"inputs.fieldId":[590]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"687":{"hasMany":{"inputs.fieldId":[591]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"688":{"hasMany":{"inputs.fieldId":[592]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"689":{"hasMany":{"inputs.fieldId":[593]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"690":{"hasMany":{"inputs.fieldId":[594]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"691":{"hasMany":{"inputs.fieldId":[595]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"692":{"hasMany":{"inputs.fieldId":[596]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"693":{"hasMany":{"inputs.fieldId":[597]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"694":{"hasMany":{"inputs.fieldId":[598]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"695":{"hasMany":{"inputs.fieldId":[599]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"696":{"hasMany":{"inputs.fieldId":[600]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"697":{"hasMany":{"inputs.fieldId":[601]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"698":{"hasMany":{"inputs.fieldId":[602]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"699":{"hasMany":{"inputs.fieldId":[603]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"700":{"hasMany":{"inputs.fieldId":[604]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"701":{"hasMany":{"foreigns.fieldId":[90],"basicrelationships.foreignKeyId":[183,184],"inputs.fieldId":[535]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"702":{"hasMany":{"foreigns.fieldId":[82],"basicrelationships.foreignKeyId":[167,168],"inputs.fieldId":[522]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"703":{"hasMany":{"inputs.fieldId":[692]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"704":{"hasMany":{"inputs.fieldId":[706]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"707":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"708":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"709":{"hasMany":{"inputs.fieldId":[707]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"710":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"711":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"712":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"713":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"714":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"715":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"716":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"717":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"718":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"719":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"720":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"721":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"722":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"723":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"724":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"726":{"hasMany":{"foreigns.relatedFieldId":[102],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"727":{"hasMany":{"inputs.fieldId":[753]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"728":{"hasMany":{"inputs.fieldId":[754]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"729":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"730":{"hasMany":{"inputs.fieldId":[755]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"731":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"732":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"733":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"734":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"735":{"hasMany":{"inputs.fieldId":[756]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"736":{"hasMany":{"foreigns.relatedFieldId":[99,103,97],"basicrelationships.parentKeyId":[198,202,201,197]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"737":{"hasMany":{"inputs.fieldId":[759]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"738":{"hasMany":{"inputs.fieldId":[760]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"739":{"hasMany":{"inputs.fieldId":[762]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"740":{"hasMany":{"inputs.fieldId":[761]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"754":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"757":{"hasMany":{"inputs.fieldId":[796,801]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"758":{"hasMany":{"inputs.fieldId":[798,803]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"759":{"hasMany":{"inputs.fieldId":[797,802]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"761":{"hasMany":{"foreigns.relatedFieldId":[96],"basicrelationships.parentKeyId":[196,195]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"763":{"hasMany":{"inputs.fieldId":[786]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"764":{"hasMany":{"inputs.fieldId":[784]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"765":{"hasMany":{"foreigns.fieldId":[96],"basicrelationships.foreignKeyId":[196,195],"inputs.fieldId":[799,804]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"766":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"767":{"hasMany":{"foreigns.fieldId":[97],"basicrelationships.foreignKeyId":[198,197],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"768":{"hasMany":{"inputs.fieldId":[770]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"772":{"hasMany":{"foreigns.relatedFieldId":[100,101],"basicrelationships.parentKeyId":[204,206,203,205]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"773":{"hasMany":{"inputs.fieldId":[775,779]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"774":{"hasMany":{"inputs.fieldId":[777,781]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"775":{"hasMany":{"foreigns.fieldId":[99],"basicrelationships.foreignKeyId":[202,201],"inputs.fieldId":[782]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"776":{"hasMany":{"inputs.fieldId":[776,780]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"777":{"hasMany":{"foreigns.fieldId":[100],"basicrelationships.foreignKeyId":[204,203],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"778":{"hasMany":{"foreigns.fieldId":[101],"basicrelationships.foreignKeyId":[206,205],"inputs.fieldId":[800]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"779":{"hasMany":{"foreigns.fieldId":[102],"manytomanyrelationships.localModelKeyId":[2],"manytomanyrelationships.modelKeyId":[1],"inputs.fieldId":[791]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"780":{"hasMany":{"foreigns.fieldId":[103],"manytomanyrelationships.modelKeyId":[2],"manytomanyrelationships.localModelKeyId":[1],"inputs.fieldId":[758]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"781":{"hasMany":{"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"782":{"hasMany":{"inputs.fieldId":[793]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"783":{"hasMany":{"inputs.fieldId":[794]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"794":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"795":{"hasMany":{"inputs.fieldId":[805]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"796":{"hasMany":{"inputs.fieldId":[806]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"797":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"798":{"hasMany":{"inputs.fieldId":[807]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"799":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"800":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"801":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"802":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"803":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"804":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"805":{"hasMany":{"inputs.fieldId":[818]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"806":{"hasMany":{"inputs.fieldId":[819]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"807":{"hasMany":{"inputs.fieldId":[825]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"808":{"hasMany":{"inputs.fieldId":[826]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"809":{"hasMany":{"inputs.fieldId":[827]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"810":{"hasMany":{"inputs.fieldId":[820]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"811":{"hasMany":{"inputs.fieldId":[821]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"812":{"hasMany":{"inputs.fieldId":[824]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"813":{"hasMany":{"inputs.fieldId":[822]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"814":{"hasMany":{"inputs.fieldId":[823]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_804":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":77,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":804,"createdAt":"2022-03-07 06:00:37","updatedAt":"2022-03-07 06:11:08","order":0},"item_805":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"label","entityId":77,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->word","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":805,"createdAt":"2022-03-07 06:00:40","updatedAt":"2022-03-07 06:11:08"},"item_806":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"date","entityId":77,"type":"date","pk":false,"fk":false,"params":{},"faker":"$faker->date","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":806,"createdAt":"2022-03-07 06:00:57","updatedAt":"2022-03-07 06:12:09"},"item_810":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"text","entityId":77,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->text","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":810,"createdAt":"2022-03-07 06:04:45","updatedAt":"2022-03-07 06:12:07"},"item_811":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"uuid","entityId":77,"type":"uuid","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->uuid","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":811,"createdAt":"2022-03-07 06:04:54","updatedAt":"2022-03-07 06:12:14"},"item_813":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"file","entityId":77,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":813,"createdAt":"2022-03-07 06:09:54","updatedAt":"2022-03-07 06:11:08"},"item_814":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"image","entityId":77,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":814,"createdAt":"2022-03-07 06:10:13","updatedAt":"2022-03-07 06:11:08"},"item_812":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"datetime","entityId":77,"type":"dateTime","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->dateTime","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":812,"createdAt":"2022-03-07 06:05:16","updatedAt":"2022-03-07 06:12:00"},"item_807":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"bool","entityId":77,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":807,"createdAt":"2022-03-07 06:02:12","updatedAt":"2022-03-07 06:11:59"},"item_808":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"number","entityId":77,"type":"decimal","pk":false,"fk":false,"params":{"options":null,"precision":"5","scale":"2"},"faker":"$faker->randomNumber(2)","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":808,"createdAt":"2022-03-07 06:02:38","updatedAt":"2022-03-07 06:24:27"},"item_809":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"json","entityId":77,"type":"json","pk":false,"fk":false,"params":{"options":null},"faker":"[]","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":10,"id":809,"createdAt":"2022-03-07 06:04:16","updatedAt":"2022-03-07 06:11:58"},"item_794":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":76,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":794,"createdAt":"2022-03-07 05:54:32","updatedAt":"2022-03-07 05:54:32","order":0},"item_795":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":76,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":795,"createdAt":"2022-03-07 05:54:32","updatedAt":"2022-03-07 05:54:32","order":1},"item_796":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email","entityId":76,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->unique->email","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":true,"id":796,"createdAt":"2022-03-07 05:54:32","updatedAt":"2022-03-07 05:54:32","order":2},"item_797":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email_verified_at","entityId":76,"type":"timestamp","pk":false,"fk":false,"params":{},"faker":"now()","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":797,"createdAt":"2022-03-07 05:54:32","updatedAt":"2022-03-07 05:54:32","order":3},"item_798":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"password","entityId":76,"type":"string","pk":false,"fk":false,"params":{},"faker":"\\Hash::make('password')","nullable":false,"hidden":true,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":798,"createdAt":"2022-03-07 05:54:32","updatedAt":"2022-03-07 05:54:32","order":4},"item_799":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"remember_token","entityId":76,"type":"string","pk":false,"fk":false,"params":{"size":100},"faker":"Str::random(10)","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":799,"createdAt":"2022-03-07 05:54:32","updatedAt":"2022-03-07 05:54:32","order":5},"item_800":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"two_factor_secret","entityId":76,"type":"text","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":800,"createdAt":"2022-03-07 05:54:32","updatedAt":"2022-03-07 05:54:32","order":6},"item_801":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"two_factor_recovery_codes","entityId":76,"type":"text","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":801,"createdAt":"2022-03-07 05:54:32","updatedAt":"2022-03-07 05:54:32","order":7},"item_802":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"current_team_id","entityId":76,"type":"foreignId","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":802,"createdAt":"2022-03-07 05:54:32","updatedAt":"2022-03-07 05:54:32","order":8},"item_803":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"profile_photo_path","entityId":76,"type":"text","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":803,"createdAt":"2022-03-07 05:54:32","updatedAt":"2022-03-07 05:54:32","order":9}},"foreigns":{"foreigns":{"count":58,"lastPrimaryKey":103,"index":{"1":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"47":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"58":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"77":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"78":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"79":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"80":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"81":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"82":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"89":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"90":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"96":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"97":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"99":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"100":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{"inputs.foreignId":[791]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{"inputs.foreignId":[758]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"hasmanydetails":{"hasmanydetails":{"count":22,"lastPrimaryKey":61,"index":{"16":{"hasMany":{"cruds.hasManyDetailId":[32]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"cruds.hasManyDetailId":[33]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"cruds.hasManyDetailId":[36]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"cruds.hasManyDetailId":[38]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{"cruds.hasManyDetailId":[56]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{"cruds.hasManyDetailId":[60]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{"cruds.hasManyDetailId":[63]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{"cruds.hasManyDetailId":[64]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"cruds.hasManyDetailId":[65]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{"cruds.hasManyDetailId":[66]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{"cruds.hasManyDetailId":[70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{"cruds.hasManyDetailId":[71]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"47":{"hasMany":{"cruds.hasManyDetailId":[85]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"48":{"hasMany":{"cruds.hasManyDetailId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{"cruds.hasManyDetailId":[87]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"50":{"hasMany":{"cruds.hasManyDetailId":[88]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"51":{"hasMany":{"cruds.hasManyDetailId":[90]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"cruds.hasManyDetailId":[91]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"cruds.hasManyDetailId":[103]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{"cruds.hasManyDetailId":[105]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{"cruds.hasManyDetailId":[107]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"cruds.hasManyDetailId":[110]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"inputs":{"inputs":{"count":351,"lastPrimaryKey":827,"index":{"1":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"110":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"113":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"115":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"116":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"117":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"118":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"120":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"122":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"124":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"126":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"139":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"140":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"141":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"142":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"143":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"144":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"145":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"158":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"159":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"160":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"164":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"165":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"172":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"174":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"267":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"277":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"278":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"279":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"280":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"282":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"284":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"285":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"327":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"328":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"330":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"331":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"332":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"437":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"438":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"439":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"440":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"441":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"442":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"461":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"462":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"463":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"464":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"466":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"467":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"468":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"469":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"471":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"472":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"473":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"474":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"475":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"476":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"478":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"479":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"480":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"481":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"482":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"483":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"484":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"495":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"497":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"499":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"500":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"501":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"506":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"507":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"508":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"509":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"510":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"511":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"512":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"513":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"514":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"515":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"516":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"517":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"518":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"519":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"520":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"521":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"522":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"523":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"524":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"525":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"526":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"527":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"528":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"529":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"530":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"531":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"532":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"533":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"534":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"535":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"536":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"537":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"538":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"539":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"540":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"541":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"542":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"543":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"544":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"545":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"546":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"547":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"548":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"549":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"550":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"551":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"552":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"553":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"554":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"555":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"556":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"557":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"558":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"559":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"560":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"561":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"562":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"563":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"564":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"565":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"566":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"567":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"568":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"569":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"570":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"571":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"572":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"573":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"574":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"575":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"576":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"577":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"578":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"579":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"580":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"581":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"582":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"583":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"584":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"585":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"586":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"587":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"588":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"589":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"590":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"591":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"592":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"593":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"594":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"595":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"596":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"597":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"598":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"599":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"600":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"601":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"602":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"603":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"604":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"605":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"606":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"609":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"611":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"612":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"613":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"614":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"615":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"616":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"617":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"618":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"619":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"621":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"622":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"623":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"624":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"625":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"626":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"627":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"628":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"629":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"630":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"631":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"632":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"633":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"634":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"635":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"636":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"637":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"638":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"639":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"640":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"641":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"642":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"643":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"644":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"645":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"646":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"647":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"648":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"649":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"650":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"651":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"652":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"653":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"654":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"655":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"656":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"657":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"658":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"659":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"660":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"661":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"662":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"663":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"664":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"665":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"666":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"667":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"668":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"669":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"670":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"671":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"672":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"673":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"674":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"675":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"676":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"677":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"678":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"679":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"680":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"681":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"682":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"684":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"685":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"686":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"687":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"689":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"690":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"691":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"692":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"693":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"694":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"695":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"697":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"698":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"699":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"700":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"701":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"702":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"703":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"704":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"705":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"706":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"707":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"708":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"709":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"710":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"711":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"712":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"713":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"714":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"715":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"716":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"717":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"718":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"719":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"721":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"722":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"723":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"724":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"725":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"726":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"727":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"728":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"729":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"730":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"733":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"734":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"735":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"736":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"737":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"753":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"754":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"755":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"756":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"758":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"759":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"760":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"761":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"762":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"770":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"775":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"776":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"777":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"779":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"780":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"781":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"782":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"784":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"786":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"791":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"793":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"794":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"796":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"797":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"798":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"799":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"800":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"801":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"802":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"803":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"804":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"805":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"806":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"807":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"818":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"819":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"820":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"821":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"822":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"823":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"824":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"825":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"826":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"827":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_805":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":112,"fieldId":795,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"name","label":"Name","placeholder":"Name","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"id":805,"createdAt":"2022-03-07 06:06:47","updatedAt":"2022-03-07 06:06:47"},"item_806":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":112,"fieldId":796,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"email","label":"Email","placeholder":"Email","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"email","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","unique:users,email","email"],"updateValidation":["required","unique:users,email","email"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"id":806,"createdAt":"2022-03-07 06:06:47","updatedAt":"2022-03-07 06:06:47"},"item_807":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":112,"fieldId":798,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"password","label":"Password","placeholder":"Password","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"password","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required"],"updateValidation":["nullable"],"onCreate":true,"onUpdate":true,"onShow":false,"onIndex":false,"onForms":true,"id":807,"createdAt":"2022-03-07 06:06:47","updatedAt":"2022-03-07 06:06:47"},"item_818":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":114,"fieldId":805,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"label","label":"Label","placeholder":"Label","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"id":818,"createdAt":"2022-03-07 06:12:32","updatedAt":"2022-03-07 06:12:32"},"item_819":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":114,"fieldId":806,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"date","label":"Date","placeholder":"Date","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"date","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","date"],"updateValidation":["nullable","date"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"id":819,"createdAt":"2022-03-07 06:12:32","updatedAt":"2022-03-07 06:12:32"},"item_820":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":114,"fieldId":810,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"text","label":"Text","placeholder":"Text","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","string"],"updateValidation":["nullable","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"id":820,"createdAt":"2022-03-07 06:12:32","updatedAt":"2022-03-07 06:12:46"},"item_821":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":114,"fieldId":811,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"uuid","label":"Uuid","placeholder":"Uuid","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["required","max:255"],"updateValidation":["required","max:255"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"id":821,"createdAt":"2022-03-07 06:12:32","updatedAt":"2022-03-07 06:12:32"},"item_822":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":114,"fieldId":813,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"file","label":"File","placeholder":"File","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"file","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","file"],"updateValidation":["nullable","file"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"id":822,"createdAt":"2022-03-07 06:12:32","updatedAt":"2022-03-07 06:12:32"},"item_823":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":114,"fieldId":814,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"image","label":"Image","placeholder":"Image","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"image","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","image","max:1024"],"updateValidation":["nullable","image","max:1024"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"id":823,"createdAt":"2022-03-07 06:12:32","updatedAt":"2022-03-07 06:12:32"},"item_824":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":114,"fieldId":812,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"datetime","label":"Datetime","placeholder":"Datetime","order":7,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"datetime","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","date"],"updateValidation":["nullable","date"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"id":824,"createdAt":"2022-03-07 06:12:32","updatedAt":"2022-03-07 06:12:32"},"item_825":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":114,"fieldId":807,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"bool","label":"Bool","placeholder":"Bool","order":8,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","boolean"],"updateValidation":["nullable","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"id":825,"createdAt":"2022-03-07 06:12:32","updatedAt":"2022-03-07 06:12:32"},"item_826":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":114,"fieldId":808,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"number","label":"Number","placeholder":"Number","order":9,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"number","checked":false,"max":255,"min":null,"step":"0.01","items":[],"validation":["nullable","numeric"],"updateValidation":["nullable","numeric"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"id":826,"createdAt":"2022-03-07 06:12:32","updatedAt":"2022-03-07 06:24:27"},"item_827":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":114,"fieldId":809,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"json","label":"Json","placeholder":"Json","order":10,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"validation":["nullable","json"],"updateValidation":["nullable","json"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"id":827,"createdAt":"2022-03-07 06:12:32","updatedAt":"2022-03-07 06:13:05"}},"manytomanydetails":{"manytomanydetails":{"count":2,"lastPrimaryKey":4,"index":{"2":{"hasMany":{"cruds.manyToManyDetailId":[99]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"cruds.manyToManyDetailId":[109]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"manytomanyrelationships":{"manytomanyrelationships":{"count":2,"lastPrimaryKey":2,"index":{"1":{"hasMany":{"manytomanyrelationships.inverseId":[2],"manytomanydetails.relationshipId":[4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"manytomanyrelationships.inverseId":[1],"manytomanydetails.relationshipId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"projects":{"projects":{"count":4,"lastPrimaryKey":8,"index":{"1":{"hasMany":{"entities.projectId":[1,51,50,49,4,5,3,37,2,40,43,47,48,41,13,9,10,14,12,45,46,11,7,6,8,36],"cruds.projectId":[1,2,3,32,33,34,36,56,38,45,46,52,63,64,67,70,71,85,86,88,89,90,87,60,65,66,91,92]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"entities.projectId":[55,53,52,62,56,58,61,54,59,60,57,63],"cruds.projectId":[75,74,83,76,77,79,82,80,81,78,73,84]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{"entities.projectId":[65,64,73,74,70,71,69],"cruds.projectId":[98,99,100,103,105,109,106,107,110,111]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"entities.projectId":[77,76],"cruds.projectId":[112,114]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_8":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Showcase","url":"http://localhost:8007","mode":"draft","folder":"/Users/fredy/php","authModelId":76,"tenancyModelId":null,"settings":{"cssFramework":"tailwind","theme":"default","uiTemplate":"jetstream","mutateDatesToCarbon":true,"authModel":null,"massAssignment":"fillable","validationMode":"array","routesMode":"resource","viewsFormMode":"blade","modelsFolder":"/Models","policiesFolder":"/Policies","servicesFolder":"/Services","requestsFolder":"/Http/Requests","controllersFolder":"/Http/Controllers","apiControllersFolder":"/Http/Controllers/Api","viewsFolder":"/resources/views/app","controllerNameMode":"singular","schemaZoom":1,"schemaScrollTop":4400,"schemaScrollLeft":4400,"turbolinks":true,"modules":[]},"codeSettings":{"options":{"forceGeneration":true,"deleteRemovedModules":true},"base":{"migrations":true,"models":true,"policies":true,"factories":true,"seeders":true,"routes":true,"apiRoutes":true,"apiSanctumAuth":true},"cruds":{"112":{"crudId":112,"name":"Users","requests":true,"controller":true,"views":true,"tests":true,"api":true},"114":{"crudId":114,"name":"Entries","requests":true,"controller":true,"views":true,"tests":true,"api":true}},"modules":{"permissionsApi":true,"permissions":true,"uiTemplate":true},"generationCommands":{"checkDependencies":true,"gitClone":true,"composerInstall":true,"storageLink":true,"npmInstall":true,"compileAssets":true},"runCommands":{"compileAssets":true,"migrate":true,"serve":true,"openBrowser":true}},"connection":{"type":"mysql","host":"127.0.0.1","port":"7001","database":"showcase","username":"root","password":"root_secret"},"modules":["auth","permissions","multiTenancy"],"version":"1.1.2","laravelVersion":9,"repositoryUrl":null,"repositoryBranch":null,"files":{".env":{"deleteOnGeneration":true,"content":"APP_NAME=\"Showcase\"\nAPP_ENV=local\nAPP_KEY=base64:YTGe3/R8L6Ws3ltDiFTl0f0WJi/uq3Ydw0X74O6DFmg=\nAPP_DEBUG=true\nAPP_URL=http://localhost:8007\n\nLOG_CHANNEL=stack\nLOG_DEPRECATIONS_CHANNEL=null\nLOG_LEVEL=debug\n\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=7001\nDB_DATABASE=showcase\nDB_USERNAME=root\nDB_PASSWORD=\"root_secret\"\n\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nFILESYSTEM_DISK=local\nQUEUE_CONNECTION=sync\nSESSION_DRIVER=database\nSESSION_LIFETIME=120\nMEMCACHED_HOST=127.0.0.1\n\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\nMAIL_MAILER=smtp\nMAIL_HOST=mailhog\nMAIL_PORT=1025\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nMAIL_FROM_ADDRESS=\"hello@example.com\"\nMAIL_FROM_NAME=\"${APP_NAME}\"\n\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=\nAWS_USE_PATH_STYLE_ENDPOINT=false\n\nPUSHER_APP_ID=\nPUSHER_APP_KEY=\nPUSHER_APP_SECRET=\nPUSHER_APP_CLUSTER=mt1\n\nMIX_PUSHER_APP_KEY=\"${PUSHER_APP_KEY}\"\nMIX_PUSHER_APP_CLUSTER=\"${PUSHER_APP_CLUSTER}\"\n","module":"base","path":".env"},"/app/Providers/AuthServiceProvider.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\Facades\\Gate;\nuse Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\n\nclass AuthServiceProvider extends ServiceProvider\n{\n    /**\n     * The policy mappings for the application.\n     *\n     * @var array\n     */\n    protected $policies = [\n        // 'App\\Models\\Model' => 'App\\Policies\\ModelPolicy',\n    ];\n\n    /**\n     * Register any authentication / authorization services.\n     *\n     * @return void\n     */\n    public function boot()\n    {\n        // Automatically finding the Policies\n        Gate::guessPolicyNamesUsing(function ($modelClass) {\n            return 'App\\\\Policies\\\\' . class_basename($modelClass) . 'Policy';\n        });\n\n        $this->registerPolicies();\n\n        // Implicitly grant \"Super Admin\" role all permission checks using can()\n        Gate::before(function ($user, $ability) {\n            if ($user->isSuperAdmin()) {\n                return true;\n            }\n        });\n    }\n}\n","module":"base","path":"/app/Providers/AuthServiceProvider.php"},"/app/Providers/AppServiceProvider.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\ServiceProvider;\n\nclass AppServiceProvider extends ServiceProvider\n{\n    /**\n     * Register any application services.\n     *\n     * @return void\n     */\n    public function register()\n    {\n    }\n\n    /**\n     * Bootstrap any application services.\n     *\n     * @return void\n     */\n    public function boot()\n    {\n        //\n    }\n}\n","module":"base","path":"/app/Providers/AppServiceProvider.php"},"/config/auth.php":{"deleteOnGeneration":true,"content":"<?php\n\nreturn [\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Defaults\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default authentication \"guard\" and password\n    | reset options for your application. You may change these defaults\n    | as required, but they're a perfect start for most applications.\n    |\n    */\n\n    'defaults' => [\n        'guard' => 'web',\n        'passwords' => 'users',\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Guards\n    |--------------------------------------------------------------------------\n    |\n    | Next, you may define every authentication guard for your application.\n    | Of course, a great default configuration has been defined for you\n    | here which uses session storage and the Eloquent user provider.\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | Supported: \"session\", \"token\"\n    |\n    */\n\n    'guards' => [\n        'web' => [\n            'driver' => 'session',\n            'provider' => 'users',\n        ],\n\n        'api' => [\n            'driver' => 'token',\n            'provider' => 'users',\n            'hash' => false,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | User Providers\n    |--------------------------------------------------------------------------\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | If you have multiple user tables or models you may configure multiple\n    | sources which represent each model / table. These sources may then\n    | be assigned to any extra authentication guards you have defined.\n    |\n    | Supported: \"database\", \"eloquent\"\n    |\n    */\n\n    'providers' => [\n        'users' => [\n            'driver' => 'eloquent',\n            'model' => App\\Models\\User::class,\n        ],\n\n        // 'users' => [\n        //     'driver' => 'database',\n        //     'table' => 'users',\n        // ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Resetting Passwords\n    |--------------------------------------------------------------------------\n    |\n    | You may specify multiple password reset configurations if you have more\n    | than one user table or model in the application and you want to have\n    | separate password reset settings based on the specific user types.\n    |\n    | The expire time is the number of minutes that the reset token should be\n    | considered valid. This security feature keeps tokens short-lived so\n    | they have less time to be guessed. You may change this as needed.\n    |\n    */\n\n    'passwords' => [\n        'users' => [\n            'provider' => 'users',\n            'table' => 'password_resets',\n            'expire' => 60,\n            'throttle' => 60,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Password Confirmation Timeout\n    |--------------------------------------------------------------------------\n    |\n    | Here you may define the amount of seconds before a password confirmation\n    | times out and the user is prompted to re-enter their password via the\n    | confirmation screen. By default, the timeout lasts for three hours.\n    |\n    */\n\n    'password_timeout' => 10800,\n];\n","module":"base","path":"/config/auth.php"},"/app/Http/Controllers/Controller.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Foundation\\Bus\\DispatchesJobs;\nuse Illuminate\\Routing\\Controller as BaseController;\nuse Illuminate\\Foundation\\Validation\\ValidatesRequests;\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\n\nclass Controller extends BaseController\n{\n    use AuthorizesRequests, DispatchesJobs, ValidatesRequests;\n}\n","module":"base","path":"/app/Http/Controllers/Controller.php"},"/app/Http/Requests/UserStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => ['required', 'unique:users,email', 'email'],\n            'password' => ['required'],\n            'roles' => 'array',\n        ];\n    }\n}\n","module":"crud:112","path":"/app/Http/Requests/UserStoreRequest.php"},"/app/Http/Requests/UserUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => [\n                'required',\n                Rule::unique('users', 'email')->ignore($this->user),\n                'email',\n            ],\n            'password' => ['nullable'],\n            'roles' => 'array',\n        ];\n    }\n}\n","module":"crud:112","path":"/app/Http/Requests/UserUpdateRequest.php"},"/app/Http/Controllers/UserController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Spatie\\Permission\\Models\\Role;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Http\\Requests\\UserStoreRequest;\nuse App\\Http\\Requests\\UserUpdateRequest;\n\nclass UserController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.users.index', compact('users', 'search'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create(Request $request)\n    {\n        $this->authorize('create', User::class);\n\n        $roles = Role::get();\n\n        return view('app.users.create', compact('roles'));\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\UserStoreRequest $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(UserStoreRequest $request)\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validated();\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        $user->syncRoles($request->roles);\n\n        return redirect()\n            ->route('users.edit', $user)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, User $user)\n    {\n        $this->authorize('view', $user);\n\n        return view('app.users.show', compact('user'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(Request $request, User $user)\n    {\n        $this->authorize('update', $user);\n\n        $roles = Role::get();\n\n        return view('app.users.edit', compact('user', 'roles'));\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\UserUpdateRequest $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(UserUpdateRequest $request, User $user)\n    {\n        $this->authorize('update', $user);\n\n        $validated = $request->validated();\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        $user->syncRoles($request->roles);\n\n        return redirect()\n            ->route('users.edit', $user)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, User $user)\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return redirect()\n            ->route('users.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:112","path":"/app/Http/Controllers/UserController.php"},"/tests/Feature/Controllers/UserControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_users()\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('users.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.index')\n            ->assertViewHas('users');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_user()\n    {\n        $response = $this->get(route('users.create'));\n\n        $response->assertOk()->assertViewIs('app.users.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user()\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->post(route('users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $user = User::latest('id')->first();\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_user()\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.show', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.show')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_user()\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.edit', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.edit')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user()\n    {\n        $user = User::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name,\n            'email' => $this->faker->unique->email,\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->put(route('users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user()\n    {\n        $user = User::factory()->create();\n\n        $response = $this->delete(route('users.destroy', $user));\n\n        $response->assertRedirect(route('users.index'));\n\n        $this->assertModelMissing($user);\n    }\n}\n","module":"crud:112","path":"/tests/Feature/Controllers/UserControllerTest.php"},"/resources/views/app/users/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('users.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.users.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('users.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:112","path":"/resources/views/app/users/create.blade.php"},"/resources/views/app/users/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('users.update', $user) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.users.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('users.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('users.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:112","path":"/resources/views/app/users/edit.blade.php"},"/resources/views/app/users/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($user) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            value=\"{{ old('name', ($editing ? $user->name : '')) }}\"\n            maxlength=\"255\"\n            placeholder=\"Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.email\n            name=\"email\"\n            label=\"Email\"\n            value=\"{{ old('email', ($editing ? $user->email : '')) }}\"\n            maxlength=\"255\"\n            placeholder=\"Email\"\n            required\n        ></x-inputs.email>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.password\n            name=\"password\"\n            label=\"Password\"\n            maxlength=\"255\"\n            placeholder=\"Password\"\n            :required=\"!$editing\"\n        ></x-inputs.password>\n    </x-inputs.group>\n\n    <div class=\"px-4 my-4\">\n        <h4 class=\"font-bold text-lg text-gray-700\">\n            Assign @lang('crud.roles.name')\n        </h4>\n\n        <div class=\"py-2\">\n            @foreach ($roles as $role)\n            <div>\n                <x-inputs.checkbox\n                    id=\"role{{ $role->id }}\"\n                    name=\"roles[]\"\n                    label=\"{{ ucfirst($role->name) }}\"\n                    value=\"{{ $role->id }}\"\n                    :checked=\"isset($user) ? $user->hasRole($role) : false\"\n                    :add-hidden-value=\"false\"\n                ></x-inputs.checkbox>\n            </div>\n            @endforeach\n        </div>\n    </div>\n</div>\n","module":"crud:112","path":"/resources/views/app/users/form-inputs.blade.php"},"/resources/views/app/users/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.name')\n                        </h5>\n                        <span>{{ $user->name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.email')\n                        </h5>\n                        <span>{{ $user->email ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.roles.name')\n                        </h5>\n                        <div>\n                            @forelse ($user->roles as $role)\n                            <div\n                                class=\"\n                                    inline-block\n                                    p-1\n                                    text-center text-sm\n                                    rounded\n                                    bg-blue-400\n                                    text-white\n                                \"\n                            >\n                                {{ $role->name }}\n                            </div>\n                            <br />\n                            @empty - @endforelse\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('users.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\User::class)\n                    <a href=\"{{ route('users.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:112","path":"/resources/views/app/users/show.blade.php"},"/resources/views/app/users/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\User::class)\n                            <a\n                                href=\"{{ route('users.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.email')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($users as $user)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->email ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $user)\n                                        <a\n                                            href=\"{{ route('users.edit', $user) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $user)\n                                        <a\n                                            href=\"{{ route('users.show', $user) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $user)\n                                        <form\n                                            action=\"{{ route('users.destroy', $user) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"3\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"3\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $users->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:112","path":"/resources/views/app/users/index.blade.php"},"/app/Http/Requests/EntryStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass EntryStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'label' => ['required', 'max:255', 'string'],\n            'date' => ['nullable', 'date'],\n            'text' => ['nullable', 'string'],\n            'uuid' => ['required', 'max:255'],\n            'file' => ['nullable', 'file'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'datetime' => ['nullable', 'date'],\n            'bool' => ['nullable', 'boolean'],\n            'number' => ['nullable', 'numeric'],\n            'json' => ['nullable', 'json'],\n        ];\n    }\n}\n","module":"crud:114","path":"/app/Http/Requests/EntryStoreRequest.php"},"/app/Http/Requests/EntryUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass EntryUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'label' => ['required', 'max:255', 'string'],\n            'date' => ['nullable', 'date'],\n            'text' => ['nullable', 'string'],\n            'uuid' => ['required', 'max:255'],\n            'file' => ['nullable', 'file'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'datetime' => ['nullable', 'date'],\n            'bool' => ['nullable', 'boolean'],\n            'number' => ['nullable', 'numeric'],\n            'json' => ['nullable', 'json'],\n        ];\n    }\n}\n","module":"crud:114","path":"/app/Http/Requests/EntryUpdateRequest.php"},"/app/Http/Controllers/EntryController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Entry;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Requests\\EntryStoreRequest;\nuse App\\Http\\Requests\\EntryUpdateRequest;\n\nclass EntryController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Entry::class);\n\n        $search = $request->get('search', '');\n\n        $entries = Entry::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.entries.index', compact('entries', 'search'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create(Request $request)\n    {\n        $this->authorize('create', Entry::class);\n\n        return view('app.entries.create');\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\EntryStoreRequest $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(EntryStoreRequest $request)\n    {\n        $this->authorize('create', Entry::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $validated['json'] = json_decode($validated['json'], true);\n\n        $entry = Entry::create($validated);\n\n        return redirect()\n            ->route('entries.edit', $entry)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Entry $entry\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Entry $entry)\n    {\n        $this->authorize('view', $entry);\n\n        return view('app.entries.show', compact('entry'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Entry $entry\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(Request $request, Entry $entry)\n    {\n        $this->authorize('update', $entry);\n\n        return view('app.entries.edit', compact('entry'));\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\EntryUpdateRequest $request\n     * @param \\App\\Models\\Entry $entry\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(EntryUpdateRequest $request, Entry $entry)\n    {\n        $this->authorize('update', $entry);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            if ($entry->file) {\n                Storage::delete($entry->file);\n            }\n\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            if ($entry->image) {\n                Storage::delete($entry->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $validated['json'] = json_decode($validated['json'], true);\n\n        $entry->update($validated);\n\n        return redirect()\n            ->route('entries.edit', $entry)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Entry $entry\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Entry $entry)\n    {\n        $this->authorize('delete', $entry);\n\n        if ($entry->file) {\n            Storage::delete($entry->file);\n        }\n\n        if ($entry->image) {\n            Storage::delete($entry->image);\n        }\n\n        $entry->delete();\n\n        return redirect()\n            ->route('entries.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:114","path":"/app/Http/Controllers/EntryController.php"},"/tests/Feature/Controllers/EntryControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Entry;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass EntryControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    protected function castToJson($json)\n    {\n        if (is_array($json)) {\n            $json = addslashes(json_encode($json));\n        } elseif (is_null($json) || is_null(json_decode($json))) {\n            throw new \\Exception(\n                'A valid JSON string was not provided for casting.'\n            );\n        }\n\n        return \\DB::raw(\"CAST('{$json}' AS JSON)\");\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_entries()\n    {\n        $entries = Entry::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('entries.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.entries.index')\n            ->assertViewHas('entries');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_entry()\n    {\n        $response = $this->get(route('entries.create'));\n\n        $response->assertOk()->assertViewIs('app.entries.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_entry()\n    {\n        $data = Entry::factory()\n            ->make()\n            ->toArray();\n\n        $data['json'] = json_encode($data['json']);\n\n        $response = $this->post(route('entries.store'), $data);\n\n        $data['json'] = $this->castToJson($data['json']);\n\n        $this->assertDatabaseHas('entries', $data);\n\n        $entry = Entry::latest('id')->first();\n\n        $response->assertRedirect(route('entries.edit', $entry));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_entry()\n    {\n        $entry = Entry::factory()->create();\n\n        $response = $this->get(route('entries.show', $entry));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.entries.show')\n            ->assertViewHas('entry');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_entry()\n    {\n        $entry = Entry::factory()->create();\n\n        $response = $this->get(route('entries.edit', $entry));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.entries.edit')\n            ->assertViewHas('entry');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_entry()\n    {\n        $entry = Entry::factory()->create();\n\n        $data = [\n            'label' => $this->faker->word,\n            'date' => $this->faker->date,\n            'text' => $this->faker->text,\n            'uuid' => $this->faker->uuid,\n            'file' => $this->faker->text(255),\n            'datetime' => $this->faker->dateTime,\n            'bool' => $this->faker->boolean,\n            'number' => $this->faker->randomNumber(2),\n            'json' => [],\n        ];\n\n        $data['json'] = json_encode($data['json']);\n\n        $response = $this->put(route('entries.update', $entry), $data);\n\n        $data['id'] = $entry->id;\n\n        $data['json'] = $this->castToJson($data['json']);\n\n        $this->assertDatabaseHas('entries', $data);\n\n        $response->assertRedirect(route('entries.edit', $entry));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_entry()\n    {\n        $entry = Entry::factory()->create();\n\n        $response = $this->delete(route('entries.destroy', $entry));\n\n        $response->assertRedirect(route('entries.index'));\n\n        $this->assertModelMissing($entry);\n    }\n}\n","module":"crud:114","path":"/tests/Feature/Controllers/EntryControllerTest.php"},"/resources/views/app/entries/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.entries.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('entries.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('entries.store') }}\"\n                    has-files\n                    class=\"mt-4\"\n                >\n                    @include('app.entries.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('entries.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:114","path":"/resources/views/app/entries/create.blade.php"},"/resources/views/app/entries/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.entries.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('entries.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('entries.update', $entry) }}\"\n                    has-files\n                    class=\"mt-4\"\n                >\n                    @include('app.entries.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('entries.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('entries.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:114","path":"/resources/views/app/entries/edit.blade.php"},"/resources/views/app/entries/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($entry) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"label\"\n            label=\"Label\"\n            value=\"{{ old('label', ($editing ? $entry->label : '')) }}\"\n            maxlength=\"255\"\n            placeholder=\"Label\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.date\n            name=\"date\"\n            label=\"Date\"\n            value=\"{{ old('date', ($editing ? optional($entry->date)->format('Y-m-d') : '')) }}\"\n            max=\"255\"\n        ></x-inputs.date>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"text\" label=\"Text\" maxlength=\"255\"\n            >{{ old('text', ($editing ? $entry->text : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"uuid\"\n            label=\"Uuid\"\n            value=\"{{ old('uuid', ($editing ? $entry->uuid : '')) }}\"\n            maxlength=\"255\"\n            placeholder=\"Uuid\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.partials.label\n            name=\"file\"\n            label=\"File\"\n        ></x-inputs.partials.label\n        ><br />\n\n        <input type=\"file\" name=\"file\" id=\"file\" class=\"form-control-file\" />\n\n        @if($editing && $entry->file)\n        <div class=\"mt-2\">\n            <a href=\"{{ \\Storage::url($entry->file) }}\" target=\"_blank\"\n                ><i class=\"icon ion-md-download\"></i>&nbsp;Download</a\n            >\n        </div>\n        @endif @error('file') @include('components.inputs.partials.error')\n        @enderror\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <div\n            x-data=\"imageViewer('{{ $editing && $entry->image ? \\Storage::url($entry->image) : '' }}')\"\n        >\n            <x-inputs.partials.label\n                name=\"image\"\n                label=\"Image\"\n            ></x-inputs.partials.label\n            ><br />\n\n            <!-- Show the image -->\n            <template x-if=\"imageUrl\">\n                <img\n                    :src=\"imageUrl\"\n                    class=\"object-cover rounded border border-gray-200\"\n                    style=\"width: 100px; height: 100px;\"\n                />\n            </template>\n\n            <!-- Show the gray box when image is not available -->\n            <template x-if=\"!imageUrl\">\n                <div\n                    class=\"border rounded border-gray-200 bg-gray-100\"\n                    style=\"width: 100px; height: 100px;\"\n                ></div>\n            </template>\n\n            <div class=\"mt-2\">\n                <input\n                    type=\"file\"\n                    name=\"image\"\n                    id=\"image\"\n                    @change=\"fileChosen\"\n                />\n            </div>\n\n            @error('image') @include('components.inputs.partials.error')\n            @enderror\n        </div>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.datetime\n            name=\"datetime\"\n            label=\"Datetime\"\n            value=\"{{ old('datetime', ($editing ? optional($entry->datetime)->format('Y-m-d\\TH:i:s') : '')) }}\"\n            max=\"255\"\n        ></x-inputs.datetime>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"bool\"\n            label=\"Bool\"\n            :checked=\"old('bool', ($editing ? $entry->bool : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.number\n            name=\"number\"\n            label=\"Number\"\n            value=\"{{ old('number', ($editing ? $entry->number : '')) }}\"\n            max=\"255\"\n            step=\"0.01\"\n            placeholder=\"Number\"\n        ></x-inputs.number>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"json\" label=\"Json\" maxlength=\"255\"\n            >{{ old('json', ($editing ? json_encode($entry->json) : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:114","path":"/resources/views/app/entries/form-inputs.blade.php"},"/resources/views/app/entries/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.entries.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('entries.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.entries.inputs.label')\n                        </h5>\n                        <span>{{ $entry->label ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.entries.inputs.date')\n                        </h5>\n                        <span>{{ $entry->date ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.entries.inputs.text')\n                        </h5>\n                        <span>{{ $entry->text ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.entries.inputs.uuid')\n                        </h5>\n                        <span>{{ $entry->uuid ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.entries.inputs.file')\n                        </h5>\n                        @if($entry->file)\n                        <a\n                            href=\"{{ \\Storage::url($entry->file) }}\"\n                            target=\"blank\"\n                            ><i class=\"mr-1 icon ion-md-download\"></i\n                            >&nbsp;Download</a\n                        >\n                        @else - @endif\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.entries.inputs.image')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $entry->image ? \\Storage::url($entry->image) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.entries.inputs.datetime')\n                        </h5>\n                        <span>{{ $entry->datetime ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.entries.inputs.bool')\n                        </h5>\n                        <span>{{ $entry->bool ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.entries.inputs.number')\n                        </h5>\n                        <span>{{ $entry->number ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.entries.inputs.json')\n                        </h5>\n                        <pre>{{ json_encode($entry->json) ?? '-' }}</pre>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('entries.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Entry::class)\n                    <a href=\"{{ route('entries.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:114","path":"/resources/views/app/entries/show.blade.php"},"/resources/views/app/entries/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.entries.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Entry::class)\n                            <a\n                                href=\"{{ route('entries.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.entries.inputs.label')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.entries.inputs.date')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.entries.inputs.text')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.entries.inputs.uuid')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.entries.inputs.file')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.entries.inputs.image')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.entries.inputs.datetime')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.entries.inputs.bool')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.entries.inputs.number')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.entries.inputs.json')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($entries as $entry)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $entry->label ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $entry->date ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $entry->text ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $entry->uuid ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    @if($entry->file)\n                                    <a\n                                        href=\"{{ \\Storage::url($entry->file) }}\"\n                                        target=\"blank\"\n                                        ><i\n                                            class=\"mr-1 icon ion-md-download\"\n                                        ></i\n                                        >&nbsp;Download</a\n                                    >\n                                    @else - @endif\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $entry->image ? \\Storage::url($entry->image) : '' }}\"\n                                    />\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $entry->datetime ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $entry->bool ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    {{ $entry->number ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    <pre>\n{{ json_encode($entry->json) ?? '-' }}</pre\n                                    >\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $entry)\n                                        <a\n                                            href=\"{{ route('entries.edit', $entry) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $entry)\n                                        <a\n                                            href=\"{{ route('entries.show', $entry) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $entry)\n                                        <form\n                                            action=\"{{ route('entries.destroy', $entry) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"11\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"11\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $entries->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:114","path":"/resources/views/app/entries/index.blade.php"},"/app/Http/Resources/UserResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass UserResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:76","path":"/app/Http/Resources/UserResource.php"},"/app/Http/Resources/UserCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass UserCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:76","path":"/app/Http/Resources/UserCollection.php"},"/app/Http/Controllers/Api/UserController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\UserResource;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Http\\Resources\\UserCollection;\nuse App\\Http\\Requests\\UserStoreRequest;\nuse App\\Http\\Requests\\UserUpdateRequest;\n\nclass UserController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate();\n\n        return new UserCollection($users);\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\UserStoreRequest $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(UserStoreRequest $request)\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validated();\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        $user->syncRoles($request->roles);\n\n        return new UserResource($user);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, User $user)\n    {\n        $this->authorize('view', $user);\n\n        return new UserResource($user);\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\UserUpdateRequest $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(UserUpdateRequest $request, User $user)\n    {\n        $this->authorize('update', $user);\n\n        $validated = $request->validated();\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        $user->syncRoles($request->roles);\n\n        return new UserResource($user);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\User $user\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, User $user)\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:112","path":"/app/Http/Controllers/Api/UserController.php"},"/tests/Feature/Api/UserTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_users_list()\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.users.index'));\n\n        $response->assertOk()->assertSee($users[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user()\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->postJson(route('api.users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user()\n    {\n        $user = User::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name,\n            'email' => $this->faker->unique->email,\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->putJson(route('api.users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user()\n    {\n        $user = User::factory()->create();\n\n        $response = $this->deleteJson(route('api.users.destroy', $user));\n\n        $this->assertModelMissing($user);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:112","path":"/tests/Feature/Api/UserTest.php"},"/app/Http/Resources/EntryResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass EntryResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:77","path":"/app/Http/Resources/EntryResource.php"},"/app/Http/Resources/EntryCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass EntryCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:77","path":"/app/Http/Resources/EntryCollection.php"},"/app/Http/Controllers/Api/EntryController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Entry;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\EntryResource;\nuse App\\Http\\Resources\\EntryCollection;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Requests\\EntryStoreRequest;\nuse App\\Http\\Requests\\EntryUpdateRequest;\n\nclass EntryController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request)\n    {\n        $this->authorize('view-any', Entry::class);\n\n        $search = $request->get('search', '');\n\n        $entries = Entry::search($search)\n            ->latest()\n            ->paginate();\n\n        return new EntryCollection($entries);\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\EntryStoreRequest $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(EntryStoreRequest $request)\n    {\n        $this->authorize('create', Entry::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('file')) {\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $validated['json'] = json_decode($validated['json'], true);\n\n        $entry = Entry::create($validated);\n\n        return new EntryResource($entry);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Entry $entry\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Request $request, Entry $entry)\n    {\n        $this->authorize('view', $entry);\n\n        return new EntryResource($entry);\n    }\n\n    /**\n     * @param \\App\\Http\\Requests\\EntryUpdateRequest $request\n     * @param \\App\\Models\\Entry $entry\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(EntryUpdateRequest $request, Entry $entry)\n    {\n        $this->authorize('update', $entry);\n\n        $validated = $request->validated();\n\n        if ($request->hasFile('file')) {\n            if ($entry->file) {\n                Storage::delete($entry->file);\n            }\n\n            $validated['file'] = $request->file('file')->store('public');\n        }\n\n        if ($request->hasFile('image')) {\n            if ($entry->image) {\n                Storage::delete($entry->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $validated['json'] = json_decode($validated['json'], true);\n\n        $entry->update($validated);\n\n        return new EntryResource($entry);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @param \\App\\Models\\Entry $entry\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Entry $entry)\n    {\n        $this->authorize('delete', $entry);\n\n        if ($entry->file) {\n            Storage::delete($entry->file);\n        }\n\n        if ($entry->image) {\n            Storage::delete($entry->image);\n        }\n\n        $entry->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:114","path":"/app/Http/Controllers/Api/EntryController.php"},"/tests/Feature/Api/EntryTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Entry;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass EntryTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_entries_list()\n    {\n        $entries = Entry::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.entries.index'));\n\n        $response->assertOk()->assertSee($entries[0]->label);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_entry()\n    {\n        $data = Entry::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.entries.store'), $data);\n\n        $this->assertDatabaseHas('entries', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_entry()\n    {\n        $entry = Entry::factory()->create();\n\n        $data = [\n            'label' => $this->faker->word,\n            'date' => $this->faker->date,\n            'text' => $this->faker->text,\n            'uuid' => $this->faker->uuid,\n            'file' => $this->faker->text(255),\n            'datetime' => $this->faker->dateTime,\n            'bool' => $this->faker->boolean,\n            'number' => $this->faker->randomNumber(2),\n            'json' => [],\n        ];\n\n        $response = $this->putJson(route('api.entries.update', $entry), $data);\n\n        $data['id'] = $entry->id;\n\n        $this->assertDatabaseHas('entries', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_entry()\n    {\n        $entry = Entry::factory()->create();\n\n        $response = $this->deleteJson(route('api.entries.destroy', $entry));\n\n        $this->assertModelMissing($entry);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:114","path":"/tests/Feature/Api/EntryTest.php"},"/lang/en/crud.php":{"deleteOnGeneration":true,"content":"<?php\n\nreturn [\n    'common' => [\n        'actions' => 'Actions',\n        'create' => 'Create',\n        'edit' => 'Edit',\n        'update' => 'Update',\n        'new' => 'New',\n        'cancel' => 'Cancel',\n        'attach' => 'Attach',\n        'detach' => 'Detach',\n        'save' => 'Save',\n        'delete' => 'Delete',\n        'delete_selected' => 'Delete selected',\n        'search' => 'Search...',\n        'back' => 'Back to Index',\n        'are_you_sure' => 'Are you sure?',\n        'no_items_found' => 'No items found',\n        'created' => 'Successfully created',\n        'saved' => 'Saved successfully',\n        'removed' => 'Successfully removed',\n    ],\n\n    'users' => [\n        'name' => 'Users',\n        'index_title' => 'Users List',\n        'new_title' => 'New User',\n        'create_title' => 'Create User',\n        'edit_title' => 'Edit User',\n        'show_title' => 'Show User',\n        'inputs' => [\n            'name' => 'Name',\n            'email' => 'Email',\n            'password' => 'Password',\n        ],\n    ],\n\n    'entries' => [\n        'name' => 'Entries',\n        'index_title' => 'Entries List',\n        'new_title' => 'New Entry',\n        'create_title' => 'Create Entry',\n        'edit_title' => 'Edit Entry',\n        'show_title' => 'Show Entry',\n        'inputs' => [\n            'label' => 'Label',\n            'date' => 'Date',\n            'text' => 'Text',\n            'uuid' => 'Uuid',\n            'file' => 'File',\n            'image' => 'Image',\n            'datetime' => 'Datetime',\n            'bool' => 'Bool',\n            'number' => 'Number',\n            'json' => 'Json',\n        ],\n    ],\n\n    'roles' => [\n        'name' => 'Roles',\n        'index_title' => 'Roles List',\n        'create_title' => 'Create Role',\n        'edit_title' => 'Edit Role',\n        'show_title' => 'Show Role',\n        'inputs' => [\n            'name' => 'Name',\n        ],\n    ],\n\n    'permissions' => [\n        'name' => 'Permissions',\n        'index_title' => 'Permissions List',\n        'create_title' => 'Create Permission',\n        'edit_title' => 'Edit Permission',\n        'show_title' => 'Show Permission',\n        'inputs' => [\n            'name' => 'Name',\n        ],\n    ],\n];\n","module":"base","path":"/lang/en/crud.php"},"/routes/api.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Api\\UserController;\nuse App\\Http\\Controllers\\Api\\AuthController;\nuse App\\Http\\Controllers\\Api\\RoleController;\nuse App\\Http\\Controllers\\Api\\EntryController;\nuse App\\Http\\Controllers\\Api\\PermissionController;\n\n/*\n|--------------------------------------------------------------------------\n| API Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register API routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| is assigned the \"api\" middleware group. Enjoy building your API!\n|\n*/\n\nRoute::post('/login', [AuthController::class, 'login'])->name('api.login');\n\nRoute::middleware('auth:sanctum')\n    ->get('/user', function (Request $request) {\n        return $request->user();\n    })\n    ->name('api.user');\n\nRoute::name('api.')\n    ->middleware('auth:sanctum')\n    ->group(function () {\n        Route::apiResource('roles', RoleController::class);\n        Route::apiResource('permissions', PermissionController::class);\n\n        Route::apiResource('users', UserController::class);\n\n        Route::apiResource('entries', EntryController::class);\n    });\n","module":"base","path":"/routes/api.php"},"/routes/web.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\HomeController;\nuse App\\Http\\Controllers\\UserController;\nuse App\\Http\\Controllers\\RoleController;\nuse App\\Http\\Controllers\\EntryController;\nuse App\\Http\\Controllers\\PermissionController;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register web routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| contains the \"web\" middleware group. Now create something great!\n|\n*/\n\nRoute::get('/', function () {\n    return view('welcome');\n});\n\nRoute::middleware(['auth:sanctum', 'verified'])\n    ->get('/dashboard', function () {\n        return view('dashboard');\n    })\n    ->name('dashboard');\n\nRoute::prefix('/')\n    ->middleware(['auth:sanctum', 'verified'])\n    ->group(function () {\n        Route::resource('roles', RoleController::class);\n        Route::resource('permissions', PermissionController::class);\n\n        Route::resource('users', UserController::class);\n        Route::resource('entries', EntryController::class);\n    });\n","module":"base","path":"/routes/web.php"},"/resources/views/components/form-button.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'method' => 'POST',\n    'action'\n])\n\n<x-form method=\"{{ $method }}\" action=\"{{ $action }}\">\n    <div>\n        <button type=\"submit\" {{ $attributes }}>\n            {{ $slot }}\n        </button>\n    </div>\n</x-form>","module":"base","path":"/resources/views/components/form-button.blade.php"},"/resources/views/components/form.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'method' => 'POST',\n    'action',\n    'hasFiles' => false,\n    'model'\n])\n\n@php\n    $method = strtoupper($method);\n@endphp\n\n<form method=\"{{ $method !== 'GET' ? 'POST' : $method }}\" action=\"{{ $action }}\" {!! $hasFiles ? 'enctype=\"multipart/form-data\"' : '' !!} {{ $attributes }}>\n    @csrf\n    @if (!in_array($method, ['POST', 'GET']))\n        @method($method)\n    @endif\n    {{ $slot }}\n</form>","module":"base","path":"/resources/views/components/form.blade.php"},"/resources/views/components/inputs/basic.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n    'type' => 'text',\n    'min' => null,\n    'max' => null,\n    'step' => null,\n])\n\n@if($label ?? null)\n    @include('components.inputs.partials.label')\n@endif\n\n<input\n    type=\"{{ $type }}\"\n    id=\"{{ $name }}\"\n    name=\"{{ $name }}\"\n    value=\"{{ old($name, $value ?? '') }}\"\n    {{ ($required ?? false) ? 'required' : '' }}\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\n    {{ $min ? \"min={$min}\" : '' }}\n    {{ $max ? \"max={$max}\" : '' }}\n    {{ $step ? \"step={$step}\" : '' }}\n    autocomplete=\"off\"\n>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"/resources/views/components/inputs/basic.blade.php"},"/resources/views/components/inputs/checkbox.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'id',\n    'name',\n    'label',\n    'value',\n    'checked' => false,\n    'addHiddenValue' => true,\n    'hiddenValue' => 0,\n])\n\n@php\n    $checked = !! $checked\n@endphp\n\n<div class=\"relative block mb-2\">\n\n    {{-- Adds a hidden default value to be send if checked is false --}}\n    @if($addHiddenValue)\n    <input type=\"hidden\" id=\"{{  $id ?? $name }}-hidden\" name=\"{{ $name }}\" value=\"{{ $hiddenValue }}\">\n    @endif\n\n    <input\n        type=\"checkbox\"\n        id=\"{{ $id ?? $name }}\"\n        name=\"{{ $name }}\"\n        value=\"{{ $value ?? 1 }}\"\n        {{ $checked ? 'checked' : '' }}\n        {{ $attributes->merge(['class' => '']) }}\n    >\n\n    @if($label ?? null)\n        <label class=\"text-gray-700 pl-2\" for=\"{{ $id ?? $name }}\">\n            {{ $label }}\n        </label>\n    @endif\n</div>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"/resources/views/components/inputs/checkbox.blade.php"},"/resources/views/components/inputs/date.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"date\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/date.blade.php"},"/resources/views/components/inputs/datetime.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"datetime-local\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/datetime.blade.php"},"/resources/views/components/inputs/email.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"email\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/email.blade.php"},"/resources/views/components/inputs/group.blade.php":{"deleteOnGeneration":true,"content":"<div {{ $attributes->merge(['class' => 'px-4 my-2']) }}>\n    {{ $slot }}\n</div>","module":"base","path":"/resources/views/components/inputs/group.blade.php"},"/resources/views/components/inputs/hidden.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'value',\n])\n\n<x-inputs.basic type=\"hidden\" :name=\"$name\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/hidden.blade.php"},"/resources/views/components/inputs/number.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n    'min' => null,\n    'max' => null,\n    'step' => null,\n])\n\n<x-inputs.basic type=\"number\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\" :min=\"$min\" :max=\"$max\" :step=\"$step\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/number.blade.php"},"/resources/views/components/inputs/partials/error.blade.php":{"deleteOnGeneration":true,"content":"<p class=\"text-red-600\" role=\"alert\">{{ $message }}</p>","module":"base","path":"/resources/views/components/inputs/partials/error.blade.php"},"/resources/views/components/inputs/partials/label.blade.php":{"deleteOnGeneration":true,"content":"<label class=\"{{ ($required ?? false) ? 'label label-required font-medium text-gray-700' : 'label font-medium text-gray-700' }}\" for=\"{{ $name }}\">\n    {{ $label }}\n</label>","module":"base","path":"/resources/views/components/inputs/partials/label.blade.php"},"/resources/views/components/inputs/password.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value' => '',\n])\n\n<x-inputs.basic type=\"password\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/password.blade.php"},"/resources/views/components/inputs/select.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'type' => 'text',\n])\n\n@if($label ?? null)\n    @include('components.inputs.partials.label')\n@endif\n\n<select\n    id=\"{{ $name }}\"\n    name=\"{{ $name }}\"\n    {{ ($required ?? false) ? 'required' : '' }}\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\n    autocomplete=\"off\"\n>{{ $slot }}</select>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"/resources/views/components/inputs/select.blade.php"},"/resources/views/components/inputs/text.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"text\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/text.blade.php"},"/resources/views/components/inputs/textarea.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n])\n\n@if($label ?? null)\n    @include('components.inputs.partials.label')\n@endif\n\n<textarea \n    id=\"{{ $name }}\"\n    name=\"{{ $name }}\" \n    rows=\"3\"\n    {{ ($required ?? false) ? 'required' : '' }}\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\n    autocomplete=\"off\"\n>{{$slot}}</textarea>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"/resources/views/components/inputs/textarea.blade.php"},"/resources/views/components/inputs/url.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"url\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/url.blade.php"},"/resources/views/components/dropdown-link.blade.php":{"deleteOnGeneration":true,"content":"<a {{ $attributes->merge(['class' => 'block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out']) }}>{{ $slot }}</a>\n","module":"base","path":"/resources/views/components/dropdown-link.blade.php"},"/resources/views/components/dropdown.blade.php":{"deleteOnGeneration":true,"content":"@props(['align' => 'right', 'width' => '48', 'contentClasses' => 'py-1 bg-white'])\n\n@php\nswitch ($align) {\n    case 'left':\n        $alignmentClasses = 'origin-top-left left-0';\n        break;\n    case 'top':\n        $alignmentClasses = 'origin-top';\n        break;\n    case 'right':\n    default:\n        $alignmentClasses = 'origin-top-right right-0';\n        break;\n}\n\nswitch ($width) {\n    case '48':\n        $width = 'w-48';\n        break;\n}\n@endphp\n\n<div class=\"relative\" x-data=\"{ open: false }\" @click.outside=\"open = false\" @close.stop=\"open = false\">\n    <div @click=\"open = ! open\">\n        {{ $trigger }}\n    </div>\n\n    <div x-show=\"open\"\n            x-transition:enter=\"transition ease-out duration-200\"\n            x-transition:enter-start=\"transform opacity-0 scale-95\"\n            x-transition:enter-end=\"transform opacity-100 scale-100\"\n            x-transition:leave=\"transition ease-in duration-75\"\n            x-transition:leave-start=\"transform opacity-100 scale-100\"\n            x-transition:leave-end=\"transform opacity-0 scale-95\"\n            class=\"absolute z-50 mt-2 {{ $width }} rounded-md shadow-lg {{ $alignmentClasses }}\"\n            style=\"display: none;\"\n            @click=\"open = false\">\n        <div class=\"rounded-md ring-1 ring-black ring-opacity-5 {{ $contentClasses }}\">\n            {{ $content }}\n        </div>\n    </div>\n</div>\n","module":"base","path":"/resources/views/components/dropdown.blade.php"},"/resources/views/components/modal.blade.php":{"deleteOnGeneration":true,"content":"{{-- This modal modal was copied from Jetstream components --}}\n\n@props(['id', 'maxWidth'])\n\n@php\n$id = $id ?? md5($attributes->wire('model'));\n$maxWidth = [\n    'sm' => 'sm:max-w-sm',\n    'md' => 'sm:max-w-md',\n    'lg' => 'sm:max-w-lg',\n    'xl' => 'sm:max-w-xl',\n    '2xl' => 'sm:max-w-2xl',\n][$maxWidth ?? '2xl'];\n@endphp\n\n<div\n    x-data=\"{\n        show: @entangle($attributes->wire('model')).defer,\n        focusables() {\n            // All focusable element types...\n            let selector = 'a, button, input:not([type=\\'hidden\\'], textarea, select, details, [tabindex]:not([tabindex=\\'-1\\'])'\n            return [...$el.querySelectorAll(selector)]\n                // All non-disabled elements...\n                .filter(el => ! el.hasAttribute('disabled'))\n        },\n        firstFocusable() { return this.focusables()[0] },\n        lastFocusable() { return this.focusables().slice(-1)[0] },\n        nextFocusable() { return this.focusables()[this.nextFocusableIndex()] || this.firstFocusable() },\n        prevFocusable() { return this.focusables()[this.prevFocusableIndex()] || this.lastFocusable() },\n        nextFocusableIndex() { return (this.focusables().indexOf(document.activeElement) + 1) % (this.focusables().length + 1) },\n        prevFocusableIndex() { return Math.max(0, this.focusables().indexOf(document.activeElement)) -1 },\n    }\"\n    x-init=\"$watch('show', value => {\n        if (value) {\n            document.body.classList.add('overflow-y-hidden');\n        } else {\n            document.body.classList.remove('overflow-y-hidden');\n        }\n    })\"\n    x-on:close.stop=\"show = false\"\n    x-on:keydown.escape.window=\"show = false\"\n    x-on:keydown.tab.prevent=\"$event.shiftKey || nextFocusable().focus()\"\n    x-on:keydown.shift.tab.prevent=\"prevFocusable().focus()\"\n    x-show=\"show\"\n    id=\"{{ $id }}\"\n    class=\"jetstream-modal fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50\"\n    style=\"display: none;\"\n>\n    <div x-show=\"show\" class=\"fixed inset-0 transform transition-all\" x-on:click=\"show = false\" x-transition:enter=\"ease-out duration-300\"\n                    x-transition:enter-start=\"opacity-0\"\n                    x-transition:enter-end=\"opacity-100\"\n                    x-transition:leave=\"ease-in duration-200\"\n                    x-transition:leave-start=\"opacity-100\"\n                    x-transition:leave-end=\"opacity-0\">\n        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n    </div>\n\n    <div x-show=\"show\" class=\"mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto\"\n                    x-transition:enter=\"ease-out duration-300\"\n                    x-transition:enter-start=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                    x-transition:enter-end=\"opacity-100 translate-y-0 sm:scale-100\"\n                    x-transition:leave=\"ease-in duration-200\"\n                    x-transition:leave-start=\"opacity-100 translate-y-0 sm:scale-100\"\n                    x-transition:leave-end=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\">\n        {{ $slot }}\n    </div>\n</div>","module":"base","path":"/resources/views/components/modal.blade.php"},"/resources/views/components/nav-dropdown.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'title'\n])\n\n<div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n    <x-dropdown align=\"right\" width=\"48\">\n        <x-slot name=\"trigger\">\n            <button class=\"flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out\">\n                <div>{{ $title ?? '' }}</div>\n\n                <div class=\"ml-1\">\n                    <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                        <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                    </svg>\n                </div>\n            </button>\n        </x-slot>\n\n        <x-slot name=\"content\">\n            {{ $slot }}\n        </x-slot>\n    </x-dropdown>\n</div>","module":"base","path":"/resources/views/components/nav-dropdown.blade.php"},"/resources/views/components/nav-link.blade.php":{"deleteOnGeneration":true,"content":"@props(['active'])\n\n@php\n$classes = ($active ?? false)\n            ? 'inline-flex items-center px-1 pt-1 border-b-2 border-blue-500 text-sm font-medium leading-5 text-gray-900 focus:outline-none focus:border-blue-700 transition duration-150 ease-in-out'\n            : 'inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out';\n@endphp\n\n<a {{ $attributes->merge(['class' => $classes]) }}>\n    {{ $slot }}\n</a>\n","module":"base","path":"/resources/views/components/nav-link.blade.php"},"/resources/views/components/partials/card.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'bodyClasses' => 'flex-auto p-6',\n])\n\n<div {{ $attributes->merge(['class' => 'relative flex flex-col rounded-lg bg-white break-words shadow-xl']) }}>\n    <div class=\"{{ $bodyClasses }}\">\n        \n        @if(isset($title))\n        <h4 class=\"text-lg font-bold mb-3\">\n            {{ $title }}\n        </h4>\n        @endif\n\n        @if(isset($subtitle))\n        <h5 class=\"text-gray-600 text-sm\">\n            {{ $subtitle }}\n        </h5>\n        @endif\n\n        {{ $slot }}\n    </div>\n</div>","module":"base","path":"/resources/views/components/partials/card.blade.php"},"/resources/views/components/partials/thumbnail.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'src',\n    'size' => 50,\n])\n\n@if($src)\n<img src=\"{{ $src }}\" class=\"object-cover rounded border border-gray-200\" style=\"width: {{ $size }}px; height: {{ $size }}px;\">\n@else\n<div class=\"border rounded border-gray-200 bg-gray-100\" style=\"width: {{ $size }}px; height: {{ $size }}px;\"></div>\n@endif","module":"base","path":"/resources/views/components/partials/thumbnail.blade.php"},"/resources/views/components/responsive-nav-link.blade.php":{"deleteOnGeneration":true,"content":"@props(['active'])\n\n@php\n$classes = ($active ?? false)\n            ? 'block pl-3 pr-4 py-2 border-l-4 border-blue-500 text-base font-medium text-blue-700 bg-indigo-50 focus:outline-none focus:text-indigo-800 focus:bg-indigo-100 focus:border-blue-700 transition duration-150 ease-in-out'\n            : 'block pl-3 pr-4 py-2 border-l-4 border-transparent text-base font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 hover:border-gray-300 focus:outline-none focus:text-gray-800 focus:bg-gray-50 focus:border-gray-300 transition duration-150 ease-in-out';\n@endphp\n\n<a {{ $attributes->merge(['class' => $classes]) }}>\n    {{ $slot }}\n</a>\n","module":"base","path":"/resources/views/components/responsive-nav-link.blade.php"},"/app/Traits/HasUUID.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Traits;\n\nuse Illuminate\\Support\\Str;\n\ntrait HasUUID\n{\n    protected static function bootHasUUID()\n    {\n        static::creating(function ($model) {\n            if (! $model->getKey()) {\n                $model->{$model->getKeyName()} = (string) Str::uuid();\n            }\n        });\n    }\n\n    /**\n     * Overriding default incrementing settings\n     *\n     * @return void\n     */\n    public function getIncrementing()\n    {\n        return false;\n    }\n\n    /**\n     * Overriding default key type\n     *\n     * @return void\n     */\n    public function getKeyType()\n    {\n        return 'string';\n    }\n}","module":"base","path":"/app/Traits/HasUUID.php"},"/resources/css/app.css":{"deleteOnGeneration":true,"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n.button {\n    @apply inline-flex items-center px-4 py-2 bg-gray-100 text-gray-800 border border-transparent rounded-md font-semibold text-xs tracking-widest transition ease-in-out duration-150 ring-gray-300;\n}\n\n.button:hover {\n    @apply bg-gray-200;\n}\n\n.button:active, .button:focus {\n    @apply bg-gray-300 ring;\n}\n\n.button.button-primary {\n    @apply bg-indigo-500 text-white !important;\n}\n\n.button-primary:hover, .button.button-primary:active, .button.button-primary:focus {\n    @apply bg-indigo-600 !important;\n}\n\n.button.button-primary:disabled {\n    @apply bg-indigo-200 !important;\n}\n\n.button.button-danger {\n    @apply bg-red-500 text-white !important;\n}\n\n.button-danger:hover, .button.button-danger:active, .button.button-danger:focus {\n    @apply bg-red-600 !important;\n}\n\n.button.button-danger:disabled {\n    @apply bg-red-200 !important;\n}","module":"base","path":"/resources/css/app.css"},"/resources/views/layouts/app.blade.php":{"deleteOnGeneration":true,"content":"<!DOCTYPE html>\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\n        \n        <title>Showcase</title>\n        \n        <!-- Fonts -->\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap\">\n        \n        <!-- Styles -->\n        <link rel=\"stylesheet\" href=\"{{ mix('css/app.css') }}\">\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css\">\n        \n        <!-- Icons -->\n        <link href=\"https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css\" rel=\"stylesheet\">\n        \n        <!-- Scripts -->\n        <script src=\"{{ mix('js/app.js') }}\" defer></script>\n\n        \n        <script type=\"module\">\n            import hotwiredTurbo from 'https://cdn.skypack.dev/@hotwired/turbo';\n        </script>\n        \n        @livewireStyles\n    </head>\n    <body class=\"font-sans antialiased\">\n        <x-jet-banner />\n\n        <div class=\"min-h-screen bg-gray-100\">\n            @livewire('navigation-menu')\n        \n            <!-- Page Heading -->\n            @if (isset($header))\n                <header class=\"bg-white shadow\">\n                    <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                        {{ $header }}\n                    </div>\n                </header>\n            @endif\n        \n            <!-- Page Content -->\n            <main>\n                {{ $slot }}\n            </main>\n        </div>\n\n        @stack('modals')\n        \n        @livewireScripts\n        \n        <script src=\"https://cdn.jsdelivr.net/gh/livewire/turbolinks@v0.1.x/dist/livewire-turbolinks.js\" data-turbolinks-eval=\"false\" data-turbo-eval=\"false\"></script>\n        \n        @stack('scripts')\n        \n        <script src=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js\"></script>\n        \n        @if (session()->has('success')) \n        <script>\n            const notyf = new Notyf({dismissible: true})\n            notyf.success('{{ session('success') }}')\n        </script> \n        @endif\n        \n        <script>\n            /* Simple Alpine Image Viewer */\n            document.addEventListener('alpine:init', () => {\n                Alpine.data('imageViewer', (src = '') => {\n                    return {\n                        imageUrl: src,\n        \n                        refreshUrl() {\n                            this.imageUrl = this.$el.getAttribute(\"image-url\")\n                        },\n        \n                        fileChosen(event) {\n                            this.fileToDataUrl(event, src => this.imageUrl = src)\n                        },\n        \n                        fileToDataUrl(event, callback) {\n                            if (! event.target.files.length) return\n        \n                            let file = event.target.files[0],\n                                reader = new FileReader()\n        \n                            reader.readAsDataURL(file)\n                            reader.onload = e => callback(e.target.result)\n                        },\n                    }\n                })\n            })\n        </script>\n    </body>\n</html>\n","module":"base","path":"/resources/views/layouts/app.blade.php"},"/resources/views/navigation-menu.blade.php":{"deleteOnGeneration":true,"content":"<nav x-data=\"{ open: false }\" class=\"bg-white border-b border-gray-100\">\n    <!-- Primary Navigation Menu -->\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between h-16\">\n            <div class=\"flex\">\n                <!-- Logo -->\n                <div class=\"shrink-0 flex items-center\">\n                    <a href=\"{{ route('dashboard') }}\">\n                        <x-jet-application-mark class=\"block h-9 w-auto\" />\n                    </a>\n                </div>\n\n                <!-- Navigation Links -->\n                <div class=\"hidden space-x-8 sm:-my-px sm:ml-10 sm:flex\">\n                    <x-jet-nav-link href=\"{{ route('dashboard') }}\" :active=\"request()->routeIs('dashboard')\">\n                        {{ __('Dashboard') }}\n                    </x-jet-nav-link>\n                </div>\n\n                <x-nav-dropdown title=\"Apps\" align=\"right\" width=\"48\">\n                        @can('view-any', App\\Models\\User::class)\n                        <x-dropdown-link href=\"{{ route('users.index') }}\">\n                        Users\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Entry::class)\n                        <x-dropdown-link href=\"{{ route('entries.index') }}\">\n                        Entries\n                        </x-dropdown-link>\n                        @endcan\n                </x-nav-dropdown>\n\n                    @if (Auth::user()->can('view-any', Spatie\\Permission\\Models\\Role::class) || \n                        Auth::user()->can('view-any', Spatie\\Permission\\Models\\Permission::class))\n                    <x-nav-dropdown title=\"Access Management\" align=\"right\" width=\"48\">\n                        \n                        @can('view-any', Spatie\\Permission\\Models\\Role::class)\n                        <x-dropdown-link href=\"{{ route('roles.index') }}\">Roles</x-dropdown-link>\n                        @endcan\n                    \n                        @can('view-any', Spatie\\Permission\\Models\\Permission::class)\n                        <x-dropdown-link href=\"{{ route('permissions.index') }}\">Permissions</x-dropdown-link>\n                        @endcan\n                        \n                    </x-nav-dropdown>\n                    @endif\n            </div>\n\n            <div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n                <!-- Teams Dropdown -->\n                @if (Laravel\\Jetstream\\Jetstream::hasTeamFeatures())\n                    <div class=\"ml-3 relative\">\n                        <x-jet-dropdown align=\"right\" width=\"60\">\n                            <x-slot name=\"trigger\">\n                                <span class=\"inline-flex rounded-md\">\n                                    <button type=\"button\" class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:bg-gray-50 hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\">\n                                        {{ Auth::user()->currentTeam->name }}\n\n                                        <svg class=\"ml-2 -mr-0.5 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                                        </svg>\n                                    </button>\n                                </span>\n                            </x-slot>\n\n                            <x-slot name=\"content\">\n                                <div class=\"w-60\">\n                                    <!-- Team Management -->\n                                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                                        {{ __('Manage Team') }}\n                                    </div>\n\n                                    <!-- Team Settings -->\n                                    <x-jet-dropdown-link href=\"{{ route('teams.show', Auth::user()->currentTeam->id) }}\">\n                                        {{ __('Team Settings') }}\n                                    </x-jet-dropdown-link>\n\n                                    @can('create', Laravel\\Jetstream\\Jetstream::newTeamModel())\n                                        <x-jet-dropdown-link href=\"{{ route('teams.create') }}\">\n                                            {{ __('Create New Team') }}\n                                        </x-jet-dropdown-link>\n                                    @endcan\n\n                                    <div class=\"border-t border-gray-100\"></div>\n\n                                    <!-- Team Switcher -->\n                                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                                        {{ __('Switch Teams') }}\n                                    </div>\n\n                                    @foreach (Auth::user()->allTeams() as $team)\n                                        <x-jet-switchable-team :team=\"$team\" />\n                                    @endforeach\n                                </div>\n                            </x-slot>\n                        </x-jet-dropdown>\n                    </div>\n                @endif\n\n                <!-- Settings Dropdown -->\n                <div class=\"ml-3 relative\">\n                    <x-jet-dropdown align=\"right\" width=\"48\">\n                        <x-slot name=\"trigger\">\n                            @if (Laravel\\Jetstream\\Jetstream::managesProfilePhotos())\n                                <button class=\"flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition duration-150 ease-in-out\">\n                                    <img class=\"h-8 w-8 rounded-full object-cover\" src=\"{{ Auth::user()->profile_photo_url }}\" alt=\"{{ Auth::user()->name }}\" />\n                                </button>\n                            @else\n                                <span class=\"inline-flex rounded-md\">\n                                    <button type=\"button\" class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition ease-in-out duration-150\">\n                                        {{ Auth::user()->name }}\n\n                                        <svg class=\"ml-2 -mr-0.5 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                                        </svg>\n                                    </button>\n                                </span>\n                            @endif\n                        </x-slot>\n\n                        <x-slot name=\"content\">\n                            <!-- Account Management -->\n                            <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                                {{ __('Manage Account') }}\n                            </div>\n\n                            <x-jet-dropdown-link href=\"{{ route('profile.show') }}\">\n                                {{ __('Profile') }}\n                            </x-jet-dropdown-link>\n\n                            @if (Laravel\\Jetstream\\Jetstream::hasApiFeatures())\n                                <x-jet-dropdown-link href=\"{{ route('api-tokens.index') }}\">\n                                    {{ __('API Tokens') }}\n                                </x-jet-dropdown-link>\n                            @endif\n\n                            <div class=\"border-t border-gray-100\"></div>\n\n                            <!-- Authentication -->\n                            <form method=\"POST\" action=\"{{ route('logout') }}\">\n                                @csrf\n\n                                <x-jet-dropdown-link href=\"{{ route('logout') }}\"\n                                         onclick=\"event.preventDefault();\n                                                this.closest('form').submit();\">\n                                    {{ __('Log Out') }}\n                                </x-jet-dropdown-link>\n                            </form>\n                        </x-slot>\n                    </x-jet-dropdown>\n                </div>\n            </div>\n\n            <!-- Hamburger -->\n            <div class=\"-mr-2 flex items-center sm:hidden\">\n                <button @click=\"open = ! open\" class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out\">\n                    <svg class=\"h-6 w-6\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <path :class=\"{'hidden': open, 'inline-flex': ! open }\" class=\"inline-flex\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n                        <path :class=\"{'hidden': ! open, 'inline-flex': open }\" class=\"hidden\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Responsive Navigation Menu -->\n    <div :class=\"{'block': open, 'hidden': ! open}\" class=\"hidden sm:hidden\">\n        <div class=\"pt-2 pb-3 space-y-1\">\n            <x-jet-responsive-nav-link href=\"{{ route('dashboard') }}\" :active=\"request()->routeIs('dashboard')\">\n                {{ __('Dashboard') }}\n            </x-jet-responsive-nav-link>\n            \n                @can('view-any', App\\Models\\User::class)\n                <x-jet-responsive-nav-link href=\"{{ route('users.index') }}\">\n                Users\n                </x-jet-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Entry::class)\n                <x-jet-responsive-nav-link href=\"{{ route('entries.index') }}\">\n                Entries\n                </x-jet-responsive-nav-link>\n                @endcan\n\n                @if (Auth::user()->can('view-any', Spatie\\Permission\\Models\\Role::class) || \n                    Auth::user()->can('view-any', Spatie\\Permission\\Models\\Permission::class))\n                    \n                    @can('view-any', Spatie\\Permission\\Models\\Role::class)\n                    <x-jet-responsive-nav-link href=\"{{ route('roles.index') }}\">Roles</x-jet-responsive-nav-link>\n                    @endcan\n                \n                    @can('view-any', Spatie\\Permission\\Models\\Permission::class)\n                    <x-jet-responsive-nav-link href=\"{{ route('permissions.index') }}\">Permissions</x-jet-responsive-nav-link>\n                    @endcan\n                    \n                @endif\n        </div>\n\n        <!-- Responsive Settings Options -->\n        <div class=\"pt-4 pb-1 border-t border-gray-200\">\n            <div class=\"flex items-center px-4\">\n                @if (Laravel\\Jetstream\\Jetstream::managesProfilePhotos())\n                    <div class=\"shrink-0 mr-3\">\n                        <img class=\"h-10 w-10 rounded-full object-cover\" src=\"{{ Auth::user()->profile_photo_url }}\" alt=\"{{ Auth::user()->name }}\" />\n                    </div>\n                @endif\n\n                <div>\n                    <div class=\"font-medium text-base text-gray-800\">{{ Auth::user()->name }}</div>\n                    <div class=\"font-medium text-sm text-gray-500\">{{ Auth::user()->email }}</div>\n                </div>\n            </div>\n\n            <div class=\"mt-3 space-y-1\">\n                <!-- Account Management -->\n                <x-jet-responsive-nav-link href=\"{{ route('profile.show') }}\" :active=\"request()->routeIs('profile.show')\">\n                    {{ __('Profile') }}\n                </x-jet-responsive-nav-link>\n\n                @if (Laravel\\Jetstream\\Jetstream::hasApiFeatures())\n                    <x-jet-responsive-nav-link href=\"{{ route('api-tokens.index') }}\" :active=\"request()->routeIs('api-tokens.index')\">\n                        {{ __('API Tokens') }}\n                    </x-jet-responsive-nav-link>\n                @endif\n\n                <!-- Authentication -->\n                <form method=\"POST\" action=\"{{ route('logout') }}\">\n                    @csrf\n\n                    <x-jet-responsive-nav-link href=\"{{ route('logout') }}\"\n                                   onclick=\"event.preventDefault();\n                                    this.closest('form').submit();\">\n                        {{ __('Log Out') }}\n                    </x-jet-responsive-nav-link>\n                </form>\n\n                <!-- Team Management -->\n                @if (Laravel\\Jetstream\\Jetstream::hasTeamFeatures())\n                    <div class=\"border-t border-gray-200\"></div>\n\n                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                        {{ __('Manage Team') }}\n                    </div>\n\n                    <!-- Team Settings -->\n                    <x-jet-responsive-nav-link href=\"{{ route('teams.show', Auth::user()->currentTeam->id) }}\" :active=\"request()->routeIs('teams.show')\">\n                        {{ __('Team Settings') }}\n                    </x-jet-responsive-nav-link>\n\n                    @can('create', Laravel\\Jetstream\\Jetstream::newTeamModel())\n                        <x-jet-responsive-nav-link href=\"{{ route('teams.create') }}\" :active=\"request()->routeIs('teams.create')\">\n                            {{ __('Create New Team') }}\n                        </x-jet-responsive-nav-link>\n                    @endcan\n\n                    <div class=\"border-t border-gray-200\"></div>\n\n                    <!-- Team Switcher -->\n                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                        {{ __('Switch Teams') }}\n                    </div>\n\n                    @foreach (Auth::user()->allTeams() as $team)\n                        <x-jet-switchable-team :team=\"$team\" component=\"jet-responsive-nav-link\" />\n                    @endforeach\n                @endif\n            </div>\n        </div>\n    </div>\n</nav>","module":"base","path":"/resources/views/navigation-menu.blade.php"},"/database/factories/EntryFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Entry;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass EntryFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Entry::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array\n     */\n    public function definition()\n    {\n        return [\n            'label' => $this->faker->word,\n            'date' => $this->faker->date,\n            'text' => $this->faker->text,\n            'uuid' => $this->faker->uuid,\n            'file' => $this->faker->text(255),\n            'datetime' => $this->faker->dateTime,\n            'bool' => $this->faker->boolean,\n            'number' => $this->faker->randomNumber(2),\n            'json' => [],\n        ];\n    }\n}\n","module":"entity:77","path":"/database/factories/EntryFactory.php"},"/database/factories/UserFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = User::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array\n     */\n    public function definition()\n    {\n        return [\n            'name' => $this->faker->name,\n            'email' => $this->faker->unique->email,\n            'email_verified_at' => now(),\n            'password' => \\Hash::make('password'),\n            'remember_token' => Str::random(10),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     *\n     * @return \\Illuminate\\Database\\Eloquent\\Factories\\Factory\n     */\n    public function unverified()\n    {\n        return $this->state(function (array $attributes) {\n            return [\n                'email_verified_at' => null,\n            ];\n        });\n    }\n}\n","module":"entity:76","path":"/database/factories/UserFactory.php"},"/database/seeders/EntrySeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Entry;\nuse Illuminate\\Database\\Seeder;\n\nclass EntrySeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        Entry::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:77","path":"/database/seeders/EntrySeeder.php"},"/database/seeders/UserSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        User::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:76","path":"/database/seeders/UserSeeder.php"},"/database/seeders/DatabaseSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        // Adding an admin user\n        $user = \\App\\Models\\User::factory()\n            ->count(1)\n            ->create([\n                'email' => 'admin@admin.com',\n                'password' => \\Hash::make('admin'),\n            ]);\n        $this->call(PermissionsSeeder::class);\n\n        $this->call(EntrySeeder::class);\n        $this->call(UserSeeder::class);\n    }\n}\n","module":"base","path":"/database/seeders/DatabaseSeeder.php"},"/app/Policies/EntryPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Entry;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass EntryPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the entry can view any models.\n     *\n     * @param  App\\Models\\User  $user\n     * @return mixed\n     */\n    public function viewAny(User $user)\n    {\n        return $user->hasPermissionTo('list entries');\n    }\n\n    /**\n     * Determine whether the entry can view the model.\n     *\n     * @param  App\\Models\\User  $user\n     * @param  App\\Models\\Entry  $model\n     * @return mixed\n     */\n    public function view(User $user, Entry $model)\n    {\n        return $user->hasPermissionTo('view entries');\n    }\n\n    /**\n     * Determine whether the entry can create models.\n     *\n     * @param  App\\Models\\User  $user\n     * @return mixed\n     */\n    public function create(User $user)\n    {\n        return $user->hasPermissionTo('create entries');\n    }\n\n    /**\n     * Determine whether the entry can update the model.\n     *\n     * @param  App\\Models\\User  $user\n     * @param  App\\Models\\Entry  $model\n     * @return mixed\n     */\n    public function update(User $user, Entry $model)\n    {\n        return $user->hasPermissionTo('update entries');\n    }\n\n    /**\n     * Determine whether the entry can delete the model.\n     *\n     * @param  App\\Models\\User  $user\n     * @param  App\\Models\\Entry  $model\n     * @return mixed\n     */\n    public function delete(User $user, Entry $model)\n    {\n        return $user->hasPermissionTo('delete entries');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     *\n     * @param  App\\Models\\User  $user\n     * @param  App\\Models\\Entry  $model\n     * @return mixed\n     */\n    public function deleteAny(User $user)\n    {\n        return $user->hasPermissionTo('delete entries');\n    }\n\n    /**\n     * Determine whether the entry can restore the model.\n     *\n     * @param  App\\Models\\User  $user\n     * @param  App\\Models\\Entry  $model\n     * @return mixed\n     */\n    public function restore(User $user, Entry $model)\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the entry can permanently delete the model.\n     *\n     * @param  App\\Models\\User  $user\n     * @param  App\\Models\\Entry  $model\n     * @return mixed\n     */\n    public function forceDelete(User $user, Entry $model)\n    {\n        return false;\n    }\n}\n","module":"entity:77","path":"/app/Policies/EntryPolicy.php"},"/app/Policies/UserPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass UserPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the user can view any models.\n     *\n     * @param  App\\Models\\User  $user\n     * @return mixed\n     */\n    public function viewAny(User $user)\n    {\n        return $user->hasPermissionTo('list users');\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     *\n     * @param  App\\Models\\User  $user\n     * @param  App\\Models\\User  $model\n     * @return mixed\n     */\n    public function view(User $user, User $model)\n    {\n        return $user->hasPermissionTo('view users');\n    }\n\n    /**\n     * Determine whether the user can create models.\n     *\n     * @param  App\\Models\\User  $user\n     * @return mixed\n     */\n    public function create(User $user)\n    {\n        return $user->hasPermissionTo('create users');\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     *\n     * @param  App\\Models\\User  $user\n     * @param  App\\Models\\User  $model\n     * @return mixed\n     */\n    public function update(User $user, User $model)\n    {\n        return $user->hasPermissionTo('update users');\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     *\n     * @param  App\\Models\\User  $user\n     * @param  App\\Models\\User  $model\n     * @return mixed\n     */\n    public function delete(User $user, User $model)\n    {\n        return $user->hasPermissionTo('delete users');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     *\n     * @param  App\\Models\\User  $user\n     * @param  App\\Models\\User  $model\n     * @return mixed\n     */\n    public function deleteAny(User $user)\n    {\n        return $user->hasPermissionTo('delete users');\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     *\n     * @param  App\\Models\\User  $user\n     * @param  App\\Models\\User  $model\n     * @return mixed\n     */\n    public function restore(User $user, User $model)\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     *\n     * @param  App\\Models\\User  $user\n     * @param  App\\Models\\User  $model\n     * @return mixed\n     */\n    public function forceDelete(User $user, User $model)\n    {\n        return false;\n    }\n}\n","module":"entity:76","path":"/app/Policies/UserPolicy.php"},"/database/migrations/2022_03_07_000001_create_entries_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('entries', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('label');\n            $table->date('date')->nullable();\n            $table->text('text')->nullable();\n            $table->uuid('uuid');\n            $table->string('file')->nullable();\n            $table->string('image')->nullable();\n            $table->dateTime('datetime')->nullable();\n            $table->boolean('bool')->nullable();\n            $table->decimal('number', 5, 2)->nullable();\n            $table->json('json')->nullable();\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('entries');\n    }\n};\n","module":"entity:77","path":"/database/migrations/2022_03_07_000001_create_entries_table.php"},"/database/migrations/2014_10_12_000000_create_users_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->timestamp('email_verified_at')->nullable();\n            $table->string('password');\n            $table->string('remember_token', 100)->nullable();\n            $table->text('two_factor_secret')->nullable();\n            $table->text('two_factor_recovery_codes')->nullable();\n            $table->foreignId('current_team_id')->nullable();\n            $table->text('profile_photo_path')->nullable();\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('users');\n    }\n};\n","module":"entity:76","path":"/database/migrations/2014_10_12_000000_create_users_table.php"},"/app/Models/Entry.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Entry extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'label',\n        'date',\n        'text',\n        'uuid',\n        'file',\n        'image',\n        'datetime',\n        'bool',\n        'number',\n        'json',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'date' => 'date',\n        'datetime' => 'datetime',\n        'bool' => 'boolean',\n        'json' => 'array',\n    ];\n}\n","module":"entity:77","path":"/app/Models/Entry.php"},"/app/Models/User.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse Laravel\\Sanctum\\HasApiTokens;\nuse App\\Models\\Scopes\\Searchable;\nuse Spatie\\Permission\\Traits\\HasRoles;\nuse Laravel\\Jetstream\\HasProfilePhoto;\nuse Illuminate\\Notifications\\Notifiable;\nuse Laravel\\Fortify\\TwoFactorAuthenticatable;\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\n\nclass User extends Authenticatable\n{\n    use HasRoles;\n    use Notifiable;\n    use HasFactory;\n    use Searchable;\n    use HasApiTokens;\n    use HasProfilePhoto;\n    use TwoFactorAuthenticatable;\n\n    protected $fillable = ['name', 'email', 'password'];\n\n    protected $searchableFields = ['*'];\n\n    protected $hidden = [\n        'password',\n        'remember_token',\n        'two_factor_secret',\n        'two_factor_recovery_codes',\n    ];\n\n    protected $casts = [\n        'email_verified_at' => 'datetime',\n    ];\n\n    public function isSuperAdmin()\n    {\n        return $this->hasRole('super-admin');\n    }\n}\n","module":"entity:76","path":"/app/Models/User.php"},"/app/Models/Scopes/Searchable.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models\\Scopes;\n\ntrait Searchable\n{\n    /**\n     * Search paginated items ordering by ID descending\n     *\n     * @param string $search\n     * @param integer $paginationQuantity\n     * @return void\n     */\n    public function scopeSearchLatestPaginated(\n        $query,\n        string $search,\n        $paginationQuantity = 10\n    ) {\n        return $query\n            ->search($search)\n            ->orderBy('updated_at', 'desc')\n            ->paginate($paginationQuantity);\n    }\n\n    /**\n     * Adds a scope to search the table based on the\n     * $searchableFields array inside the model\n     *\n     * @param [type] $query\n     * @param [type] $search\n     * @return void\n     */\n    public function scopeSearch($query, $search)\n    {\n        $query->where(function ($query) use ($search) {\n            foreach ($this->getSearchableFields() as $field) {\n                $query->orWhere($field, 'like', \"%{$search}%\");\n            }\n        });\n\n        return $query;\n    }\n\n    /**\n     * Returns the searchable fields. If $searchableFields is undefined,\n     * or is an empty array, or its first element is '*', it will search\n     * in all table fields\n     *\n     * @return array\n     */\n    protected function getSearchableFields()\n    {\n        if (isset($this->searchableFields) && count($this->searchableFields)) {\n            return $this->searchableFields[0] === '*'\n                ? $this->getAllModelTableFields()\n                : $this->searchableFields;\n        }\n\n        return $this->getAllModelTableFields();\n    }\n\n    /**\n     * Gets all fields from Model's table\n     *\n     * @return array\n     */\n    protected function getAllModelTableFields()\n    {\n        $tableName = $this->getTable();\n\n        return $this->getConnection()\n            ->getSchemaBuilder()\n            ->getColumnListing($tableName);\n    }\n}\n","module":"base","path":"/app/Models/Scopes/Searchable.php"},"/app/Http/Controllers/Api/AuthController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Validation\\ValidationException;\n\nclass AuthController extends Controller\n{\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function login(Request $request)\n    {\n        $credentials = $request->validate([\n            'email' => 'required|email',\n            'password' => 'required',\n        ]);\n\n        if (!auth()->attempt($credentials)) {\n            throw ValidationException::withMessages([\n                'email' => [trans('auth.failed')],\n            ]);\n        }\n\n        $user = User::whereEmail($request->email)->firstOrFail();\n\n        $token = $user->createToken('auth-token');\n\n        return response()->json([\n            'token' => $token->plainTextToken,\n        ]);\n    }\n}\n","module":"base","path":"/app/Http/Controllers/Api/AuthController.php"},"/database/seeders/PermissionsSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse Spatie\\Permission\\Models\\Role;\nuse Spatie\\Permission\\Models\\Permission;\nuse Spatie\\Permission\\PermissionRegistrar;\n\nclass PermissionsSeeder extends Seeder\n{\n    public function run()\n    {\n        // Reset cached roles and permissions\n        app()[PermissionRegistrar::class]->forgetCachedPermissions();\n\n        // Create default permissions\n        Permission::create(['name' => 'list entries']);\n        Permission::create(['name' => 'view entries']);\n        Permission::create(['name' => 'create entries']);\n        Permission::create(['name' => 'update entries']);\n        Permission::create(['name' => 'delete entries']);\n\n        // Create user role and assign existing permissions\n        $currentPermissions = Permission::all();\n        $userRole = Role::create(['name' => 'user']);\n        $userRole->givePermissionTo($currentPermissions);\n\n        // Create admin exclusive permissions\n        Permission::create(['name' => 'list roles']);\n        Permission::create(['name' => 'view roles']);\n        Permission::create(['name' => 'create roles']);\n        Permission::create(['name' => 'update roles']);\n        Permission::create(['name' => 'delete roles']);\n\n        Permission::create(['name' => 'list permissions']);\n        Permission::create(['name' => 'view permissions']);\n        Permission::create(['name' => 'create permissions']);\n        Permission::create(['name' => 'update permissions']);\n        Permission::create(['name' => 'delete permissions']);\n\n        Permission::create(['name' => 'list users']);\n        Permission::create(['name' => 'view users']);\n        Permission::create(['name' => 'create users']);\n        Permission::create(['name' => 'update users']);\n        Permission::create(['name' => 'delete users']);\n\n        // Create admin role and assign all permissions\n        $allPermissions = Permission::all();\n        $adminRole = Role::create(['name' => 'super-admin']);\n        $adminRole->givePermissionTo($allPermissions);\n\n        $user = \\App\\Models\\User::whereEmail('admin@admin.com')->first();\n\n        if ($user) {\n            $user->assignRole($adminRole);\n        }\n    }\n}\n","module":"permissions","path":"/database/seeders/PermissionsSeeder.php"},"/app/Http/Controllers/RoleController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse Laravel\\Sanctum\\Sanctum;\nuse Spatie\\Permission\\Models\\Role;\nuse Spatie\\Permission\\Models\\Permission;\n\nclass RoleController extends Controller {\n\n    /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request) \n    {\n        $this->authorize('list', Role::class);\n\n        $search = $request->get('search', '');\n        $roles = Role::where('name', 'like', \"%{$search}%\")->paginate(10);\n\n        return view('app.roles.index')\n            ->with('roles', $roles)\n            ->with('search', $search);\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create() \n    {\n        $this->authorize('create', Role::class);\n\n        $permissions = Permission::all();\n\n        return view('app.roles.create')->with('permissions', $permissions);\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request) \n    {\n        Sanctum::actingAs(request()->user(), [], 'web');\n\n        $this->authorize('create', Role::class);\n\n        $data = $this->validate($request, [\n            'name' => 'required|unique:roles|max:32',\n            'permissions' => 'array',\n        ]);\n\n        $role = Role::create($data);\n\n        $permissions = Permission::find($request->permissions);\n        $role->syncPermissions($permissions);\n\n        return redirect()\n            ->route('roles.edit', $role->id)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     *\n     * @param  \\Spatie\\Permission\\Models\\Role  $role\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Role $role) \n    {\n        $this->authorize('view', Role::class);\n\n        return view('app.roles.show')->with('role', $role);\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     *\n     * @param  \\Spatie\\Permission\\Models\\Role  $role\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(Role $role) \n    {\n        $this->authorize('update', $role);\n\n        $permissions = Permission::all();\n\n        return view('app.roles.edit')\n            ->with('role', $role)\n            ->with('permissions', $permissions);\n    }\n\n    /**\n     * Update the specified resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\Spatie\\Permission\\Models\\Role  $role\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, Role $role) \n    {\n        $this->authorize('update', $role);\n\n        $data = $this->validate($request, [\n            'name' => 'required|max:32|unique:roles,name,'.$role->id,\n            'permissions' => 'array',\n        ]);\n        \n        $role->update($data);\n\n        $permissions = Permission::find($request->permissions);\n        $role->syncPermissions($permissions);\n\n        return redirect()\n            ->route('roles.edit', $role->id)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param  \\Spatie\\Permission\\Models\\Role  $role\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Role $role)\n    {\n        $this->authorize('delete', $role);\n\n        $role->delete();\n\n        return redirect()\n            ->route('roles.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}","module":"permissions","path":"/app/Http/Controllers/RoleController.php"},"/app/Http/Controllers/PermissionController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse Laravel\\Sanctum\\Sanctum;\nuse Spatie\\Permission\\Models\\Role;\nuse Spatie\\Permission\\Models\\Permission;\n\nclass PermissionController extends Controller\n{\n    /**\n    * Display a listing of the resource.\n    *\n    * @return \\Illuminate\\Http\\Response\n    */\n    public function index(Request $request)\n    {\n        $this->authorize('list', Permission::class);\n\n        $search = $request->get('search', '');\n        $permissions = Permission::where('name', 'like', \"%{$search}%\")->paginate(10);\n\n        return view('app.permissions.index')\n            ->with('permissions', $permissions)\n            ->with('search', $search);\n    }\n\n    /**\n    * Show the form for creating a new resource.\n    *\n    * @return \\Illuminate\\Http\\Response\n    */\n    public function create()\n    {\n        $this->authorize('create', Permission::class);\n\n        $roles = Role::all();\n        return view('app.permissions.create')->with('roles', $roles);\n    }\n\n    /**\n    * Store a newly created resource in storage.\n    *\n    * @param  \\Illuminate\\Http\\Request  $request\n    * @return \\Illuminate\\Http\\Response\n    */\n    public function store(Request $request)\n    {\n        Sanctum::actingAs(request()->user(), [], 'web');\n\n        $this->authorize('create', Permission::class);\n\n        $data = $this->validate($request, [\n            'name' => 'required|max:64',\n            'roles' => 'array'\n        ]);\n\n        $permission = Permission::create($data);\n        \n        $roles = Role::find($request->roles);\n        $permission->syncRoles($roles);\n\n        return redirect()\n            ->route('permissions.edit', $permission->id)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n    * Display the specified resource.\n    *\n    * @param  \\Spatie\\Permission\\Models\\Permission  $permission\n    * @return \\Illuminate\\Http\\Response\n    */\n    public function show(Permission $permission)\n    {\n        $this->authorize('view', Permission::class);\n\n        return view('app.permissions.show')->with('permission', $permission);\n    }\n\n    /**\n    * Show the form for editing the specified resource.\n    *\n    * @param  \\Spatie\\Permission\\Models\\Permission  $permission\n    * @return \\Illuminate\\Http\\Response\n    */\n    public function edit(Permission $permission)\n    {\n        $this->authorize('update', $permission);\n\n        $roles = Role::get();\n\n        return view('app.permissions.edit')\n            ->with('permission', $permission)\n            ->with('roles', $roles);\n    }\n\n    /**\n    * Update the specified resource in storage.\n    *\n    * @param  \\Illuminate\\Http\\Request  $request\n    * @param  \\Spatie\\Permission\\Models\\Permission  $permission\n    * @return \\Illuminate\\Http\\Response\n    */\n    public function update(Request $request, Permission $permission)\n    {\n        $this->authorize('update', $permission);\n\n        $data = $this->validate($request, [\n            'name' => 'required|max:40',\n            'roles' => 'array'\n        ]);\n\n        $permission->update($data);\n        \n        $roles = Role::find($request->roles);\n        $permission->syncRoles($roles);\n\n        return redirect()\n            ->route('permissions.edit', $permission->id)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n    * Remove the specified resource from storage.\n    *\n    * @param  \\Spatie\\Permission\\Models\\Permission  $permission\n    * @return \\Illuminate\\Http\\Response\n    */\n    public function destroy(Permission $permission)\n    {\n        $this->authorize('delete', $permission);\n\n        $permission->delete();\n\n        return redirect()\n            ->route('permissions.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"permissions","path":"/app/Http/Controllers/PermissionController.php"},"/tests/Feature/Controllers/RoleControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse Spatie\\Permission\\Models\\Role;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass RoleControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(User::factory()->create(['email' => 'admin@admin.com']));\n        \n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_roles()\n    {\n        $response = $this->get(route('roles.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.roles.index')\n            ->assertViewHas('roles');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_role()\n    {\n        $response = $this->get(route('roles.create'));\n\n        $response->assertOk()->assertViewIs('app.roles.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_role()\n    {\n        $response = $this->post(route('roles.store'), [\n            'name' => 'secretary',\n            'permissions' => []\n        ]);\n\n        $this->assertDatabaseHas('roles', ['name' => 'secretary']);\n\n        $role = Role::latest('id')->first();\n\n        $response->assertRedirect(route('roles.edit', $role));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_role()\n    {\n        $role = Role::first();\n\n        $response = $this->get(route('roles.show', $role));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.roles.show')\n            ->assertViewHas('role');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_role()\n    {\n        $role = Role::first();\n\n        $response = $this->get(route('roles.edit', $role));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.roles.edit')\n            ->assertViewHas('role');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_role()\n    {\n        $role = Role::first();\n\n        $data = [\n            'name' => 'manager',\n            'permissions' => [],\n        ];\n\n        $response = $this->put(route('roles.update', $role), $data);\n\n        $this->assertDatabaseHas('roles', [\n            'id' => $role->id,\n            'name' => 'manager'\n        ]);\n\n        $response->assertRedirect(route('roles.edit', $role));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_role()\n    {\n        $role = Role::first();\n\n        $response = $this->delete(route('roles.destroy', $role));\n\n        $response->assertRedirect(route('roles.index'));\n        \n        $this->assertModelMissing($role);\n    }\n}\n","module":"permissions","path":"/tests/Feature/Controllers/RoleControllerTest.php"},"/tests/Feature/Controllers/PermissionControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse Spatie\\Permission\\Models\\Permission;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass PermissionControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(User::factory()->create(['email' => 'admin@admin.com']));\n        \n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_permissions()\n    {\n        $response = $this->get(route('permissions.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.permissions.index')\n            ->assertViewHas('permissions');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_permission()\n    {\n        $response = $this->get(route('permissions.create'));\n\n        $response->assertOk()->assertViewIs('app.permissions.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_permission()\n    {\n        $response = $this->post(route('permissions.store'), [\n            'name' => 'list secretaries',\n            'roles' => []\n        ]);\n\n        $this->assertDatabaseHas('permissions', ['name' => 'list secretaries']);\n\n        $permission = Permission::latest('id')->first();\n\n        $response->assertRedirect(route('permissions.edit', $permission));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_permission()\n    {\n        $permission = Permission::first();\n\n        $response = $this->get(route('permissions.show', $permission));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.permissions.show')\n            ->assertViewHas('permission');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_permission()\n    {\n        $permission = Permission::first();\n\n        $response = $this->get(route('permissions.edit', $permission));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.permissions.edit')\n            ->assertViewHas('permission');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_permission()\n    {\n        $permission = Permission::first();\n\n        $data = [\n            'name' => 'list managers',\n            'roles' => [],\n        ];\n\n        $response = $this->put(route('permissions.update', $permission), $data);\n\n        $this->assertDatabaseHas('permissions', [\n            'id' => $permission->id,\n            'name' => 'list managers'\n        ]);\n\n        $response->assertRedirect(route('permissions.edit', $permission));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_permission()\n    {\n        $permission = Permission::first();\n\n        $response = $this->delete(route('permissions.destroy', $permission));\n\n        $response->assertRedirect(route('permissions.index'));\n        \n        $this->assertModelMissing($permission);\n    }\n}\n","module":"permissions","path":"/tests/Feature/Controllers/PermissionControllerTest.php"},"/resources/views/app/roles/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.roles.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('roles.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('roles.update', $role) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.roles.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('roles.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('roles.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/roles/edit.blade.php"},"/resources/views/app/roles/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.roles.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Role::class)\n                            <a\n                                href=\"{{ route('roles.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.roles.inputs.name')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($roles as $role)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $role->name ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $role)\n                                        <a\n                                            href=\"{{ route('roles.edit', $role) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $role)\n                                        <a\n                                            href=\"{{ route('roles.show', $role) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $role)\n                                        <form\n                                            action=\"{{ route('roles.destroy', $role) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"2\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"2\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $roles->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/roles/index.blade.php"},"/resources/views/app/roles/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.roles.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('roles.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('roles.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.roles.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('roles.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/roles/create.blade.php"},"/resources/views/app/roles/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.roles.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('roles.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.roles.inputs.name')\n                        </h5>\n                        <span>{{ $role->name ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('roles.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Role::class)\n                    <a href=\"{{ route('roles.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/roles/show.blade.php"},"/resources/views/app/roles/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($role) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            value=\"{{ old('name', ($editing ? $role->name : '')) }}\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <div class=\"px-4 my-4\">\n        <h4 class=\"font-bold text-lg text-gray-700\">\n            Assign @lang('crud.permissions.name')\n        </h4>\n\n        <div class=\"py-2\">\n            @foreach ($permissions as $permission)\n            <div>\n                <x-inputs.checkbox\n                    id=\"permission{{ $permission->id }}\"\n                    name=\"permissions[]\"\n                    label=\"{{ ucfirst($permission->name) }}\"\n                    value=\"{{ $permission->id }}\"\n                    :checked=\"isset($role) ? $role->hasPermissionTo($permission) : false\"\n                    :add-hidden-value=\"false\"\n                ></x-inputs.checkbox>\n            </div>\n            @endforeach\n        </div>\n    </div>\n</div>\n","module":"crud","path":"/resources/views/app/roles/form-inputs.blade.php"},"/resources/views/app/permissions/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.permissions.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('permissions.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('permissions.update', $permission) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.permissions.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a\n                            href=\"{{ route('permissions.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('permissions.create') }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/permissions/edit.blade.php"},"/resources/views/app/permissions/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.permissions.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Permission::class)\n                            <a\n                                href=\"{{ route('permissions.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.permissions.inputs.name')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($permissions as $permission)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $permission->name ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $permission)\n                                        <a\n                                            href=\"{{ route('permissions.edit', $permission) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $permission)\n                                        <a\n                                            href=\"{{ route('permissions.show', $permission) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $permission)\n                                        <form\n                                            action=\"{{ route('permissions.destroy', $permission) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"2\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"2\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $permissions->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/permissions/index.blade.php"},"/resources/views/app/permissions/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.permissions.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('permissions.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('permissions.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.permissions.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a\n                            href=\"{{ route('permissions.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/permissions/create.blade.php"},"/resources/views/app/permissions/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.permissions.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('permissions.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.permissions.inputs.name')\n                        </h5>\n                        <span>{{ $permission->name ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('permissions.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Permission::class)\n                    <a href=\"{{ route('permissions.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/permissions/show.blade.php"},"/resources/views/app/permissions/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($permission) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            value=\"{{ old('name', ($editing ? $permission->name : '')) }}\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <div class=\"px-4 my-4\">\n        <h4 class=\"font-bold text-lg text-gray-700\">\n            Assign @lang('crud.roles.name')\n        </h4>\n\n        <div class=\"py-2\">\n            @foreach ($roles as $role)\n            <div>\n                <x-inputs.checkbox\n                    id=\"role{{ $role->id }}\"\n                    name=\"roles[]\"\n                    label=\"{{ ucfirst($role->name) }}\"\n                    value=\"{{ $role->id }}\"\n                    :checked=\"isset($permission) ? $role->hasPermissionTo($permission) : false\"\n                    :add-hidden-value=\"false\"\n                ></x-inputs.checkbox>\n            </div>\n            @endforeach\n        </div>\n    </div>\n</div>\n","module":"crud","path":"/resources/views/app/permissions/form-inputs.blade.php"},"/app/Http/Resources/PermissionCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass PermissionCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"base","path":"/app/Http/Resources/PermissionCollection.php"},"/app/Http/Resources/PermissionResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass PermissionResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"base","path":"/app/Http/Resources/PermissionResource.php"},"/app/Http/Resources/RoleCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass RoleCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"base","path":"/app/Http/Resources/RoleCollection.php"},"/app/Http/Resources/RoleResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass RoleResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"base","path":"/app/Http/Resources/RoleResource.php"},"/app/Http/Controllers/Api/PermissionController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse Illuminate\\Http\\Request;\nuse Spatie\\Permission\\Models\\Role;\nuse App\\Http\\Controllers\\Controller;\nuse Spatie\\Permission\\Models\\Permission;\nuse App\\Http\\Resources\\PermissionResource;\nuse App\\Http\\Resources\\PermissionCollection;\n\nclass PermissionController extends Controller\n{\n    /**\n    * @return \\Illuminate\\Http\\Response\n    */\n    public function index(Request $request)\n    {\n        $this->authorize('list', Permission::class);\n\n        $search = $request->get('search', '');\n        $permissions = Permission::where('name', 'like', \"%{$search}%\")->paginate();\n\n        return new PermissionCollection($permissions);\n    }\n\n    /**\n    * @param  \\Illuminate\\Http\\Request  $request\n    * @return \\Illuminate\\Http\\Response\n    */\n    public function store(Request $request)\n    {\n        $this->authorize('create', Permission::class);\n\n        $validated = $this->validate($request, [\n            'name' => 'required|max:64',\n            'roles' => 'array'\n        ]);\n\n        $permission = Permission::create($validated);\n        \n        $roles = Role::find($request->roles);\n        $permission->syncRoles($roles);\n\n        return new PermissionResource($permission);\n    }\n\n    /**\n    * @param  \\Spatie\\Permission\\Models\\Permission  $permission\n    * @return \\Illuminate\\Http\\Response\n    */\n    public function show(Permission $permission)\n    {\n        $this->authorize('view', Permission::class);\n\n        return new PermissionResource($permission);\n    }\n\n    /**\n    * @param  \\Illuminate\\Http\\Request  $request\n    * @param  \\Spatie\\Permission\\Models\\Permission  $permission\n    * @return \\Illuminate\\Http\\Response\n    */\n    public function update(Request $request, Permission $permission)\n    {\n        $this->authorize('update', $permission);\n\n        $validated = $this->validate($request, [\n            'name' => 'required|max:40',\n            'roles' => 'array'\n        ]);\n\n        $permission->update($validated);\n        \n        $roles = Role::find($request->roles);\n        $permission->syncRoles($roles);\n\n        return new PermissionResource($permission);\n    }\n\n    /**\n    * @param  \\Spatie\\Permission\\Models\\Permission  $permission\n    * @return \\Illuminate\\Http\\Response\n    */\n    public function destroy(Permission $permission)\n    {\n        $this->authorize('delete', $permission);\n\n        $permission->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"base","path":"/app/Http/Controllers/Api/PermissionController.php"},"/app/Http/Controllers/Api/RoleController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse Illuminate\\Http\\Request;\nuse Spatie\\Permission\\Models\\Role;\nuse App\\Http\\Resources\\RoleResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\RoleCollection;\nuse Spatie\\Permission\\Models\\Permission;\n\nclass RoleController extends Controller {\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index(Request $request) \n    {\n        $this->authorize('list', Role::class);\n\n        $search = $request->get('search', '');\n        $roles = Role::where('name', 'like', \"%{$search}%\")->paginate();\n\n        return new RoleCollection($roles);\n    }\n\n    /**\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request) \n    {\n        $this->authorize('create', Role::class);\n\n        $validated = $this->validate($request, [\n            'name' => 'required|unique:roles|max:32',\n            'permissions' => 'array',\n        ]);\n\n        $role = Role::create($validated);\n\n        $permissions = Permission::find($request->permissions);\n        $role->syncPermissions($permissions);\n\n        return new RoleResource($role);\n    }\n\n    /**\n     * @param  \\Spatie\\Permission\\Models\\Role  $role\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Role $role) \n    {\n        $this->authorize('view', Role::class);\n\n        return new RoleResource($role);\n    }\n\n    /**\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\Spatie\\Permission\\Models\\Role  $role\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, Role $role) \n    {\n        $this->authorize('update', $role);\n\n        $validated = $this->validate($request, [\n            'name'=>'required|max:32|unique:roles,name,'.$role->id,\n            'permissions' =>'array',\n        ]);\n        \n        $role->update($validated);\n\n        $permissions = Permission::find($request->permissions);\n        $role->syncPermissions($permissions);\n\n        return new RoleResource($role);\n    }\n\n    /**\n     * @param  \\Spatie\\Permission\\Models\\Role  $role\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Role $role)\n    {\n        $this->authorize('delete', $role);\n\n        $role->delete();\n\n        return response()->noContent();\n    }\n}","module":"base","path":"/app/Http/Controllers/Api/RoleController.php"},"/webpack.mix.js":{"deleteOnGeneration":true,"content":"const mix = require('laravel-mix');\n\n/*\n |--------------------------------------------------------------------------\n | Mix Asset Management\n |--------------------------------------------------------------------------\n |\n | Mix provides a clean, fluent API for defining some Webpack build steps\n | for your Laravel application. By default, we are compiling the Sass\n | file for the application as well as bundling up all the JS files.\n |\n */\n\nmix.js('resources/js/app.js', 'public/js')\n    .postCss('resources/css/app.css', 'public/css', [\n        require('tailwindcss')\n    ])\n    .sourceMaps();\n","module":"base","path":"/webpack.mix.js"},"/tailwind.config.js":{"deleteOnGeneration":true,"content":"const defaultTheme = require('tailwindcss/defaultTheme');\n\nmodule.exports = {\n    content: [\n        './vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php',\n        './vendor/laravel/jetstream/**/*.blade.php',\n        './storage/framework/views/*.php',\n        './resources/views/**/*.blade.php',\n    ],\n\n    theme: {\n        extend: {\n            fontFamily: {\n                sans: ['Nunito', ...defaultTheme.fontFamily.sans],\n            },\n        },\n    },\n\n    variants: {\n        extend: {\n            opacity: ['disabled'],\n        },\n    },\n\n    plugins: [require('@tailwindcss/forms'), require('@tailwindcss/typography')],\n};\n","module":"base","path":"/tailwind.config.js"},"/resources/js/bootstrap.js":{"deleteOnGeneration":true,"content":"window._ = require('lodash');\n\n/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\nwindow.axios = require('axios');\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo';\n\n// window.Pusher = require('pusher-js');\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: process.env.MIX_PUSHER_APP_KEY,\n//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n//     forceTLS: true\n// });\n","module":"base","path":"/resources/js/bootstrap.js"}},"skippedFiles":{},"removedModules":[],"migrationsDate":"2022_03_07","lastForeignAlias":0,"cascadeDeleteAsDefault":true,"cascadeUpdateAsDefault":true,"hasFixedForeignCallbacks":true,"hasFixedMigrations":true,"hasFixedHasManyDetailOnPageFields":true,"hasFixedLongForeignIndexName":true,"pluginsData":{},"templatesData":{},"id":8,"createdAt":"2022-03-07 05:54:32","updatedAt":"2022-03-07 06:25:03"}},"manytomanycomponents":{},"morphrelationships":{}},"exportedItems":["projects:8"],"exportedRelationships":["Project:8:cruds","Crud:112:inputs","Crud:112:manyToManyComponents","Crud:112:hasManyDetails","Crud:112:manyToManyDetails","Crud:114:inputs","Crud:114:manyToManyComponents","Crud:114:hasManyDetails","Crud:114:manyToManyDetails","Project:8:entities","Entity:77:authProject","Entity:77:cruds","Entity:77:fields","Field:804:inputs","Field:804:foreign","Field:804:relatedForeigns","Field:804:basicParentRelationships","Field:804:basicForeignRelationships","Field:804:manyToManyModelRelationships","Field:804:manyToManylocalModelRelationships","Field:804:typedMorphRelationships","Field:804:identifiedMorphRelationships","Field:805:inputs","Field:805:foreign","Field:805:relatedForeigns","Field:805:basicParentRelationships","Field:805:basicForeignRelationships","Field:805:manyToManyModelRelationships","Field:805:manyToManylocalModelRelationships","Field:805:typedMorphRelationships","Field:805:identifiedMorphRelationships","Field:806:inputs","Field:806:foreign","Field:806:relatedForeigns","Field:806:basicParentRelationships","Field:806:basicForeignRelationships","Field:806:manyToManyModelRelationships","Field:806:manyToManylocalModelRelationships","Field:806:typedMorphRelationships","Field:806:identifiedMorphRelationships","Field:810:inputs","Field:810:foreign","Field:810:relatedForeigns","Field:810:basicParentRelationships","Field:810:basicForeignRelationships","Field:810:manyToManyModelRelationships","Field:810:manyToManylocalModelRelationships","Field:810:typedMorphRelationships","Field:810:identifiedMorphRelationships","Field:811:inputs","Field:811:foreign","Field:811:relatedForeigns","Field:811:basicParentRelationships","Field:811:basicForeignRelationships","Field:811:manyToManyModelRelationships","Field:811:manyToManylocalModelRelationships","Field:811:typedMorphRelationships","Field:811:identifiedMorphRelationships","Field:813:inputs","Field:813:foreign","Field:813:relatedForeigns","Field:813:basicParentRelationships","Field:813:basicForeignRelationships","Field:813:manyToManyModelRelationships","Field:813:manyToManylocalModelRelationships","Field:813:typedMorphRelationships","Field:813:identifiedMorphRelationships","Field:814:inputs","Field:814:foreign","Field:814:relatedForeigns","Field:814:basicParentRelationships","Field:814:basicForeignRelationships","Field:814:manyToManyModelRelationships","Field:814:manyToManylocalModelRelationships","Field:814:typedMorphRelationships","Field:814:identifiedMorphRelationships","Field:812:inputs","Field:812:foreign","Field:812:relatedForeigns","Field:812:basicParentRelationships","Field:812:basicForeignRelationships","Field:812:manyToManyModelRelationships","Field:812:manyToManylocalModelRelationships","Field:812:typedMorphRelationships","Field:812:identifiedMorphRelationships","Field:807:inputs","Field:807:foreign","Field:807:relatedForeigns","Field:807:basicParentRelationships","Field:807:basicForeignRelationships","Field:807:manyToManyModelRelationships","Field:807:manyToManylocalModelRelationships","Field:807:typedMorphRelationships","Field:807:identifiedMorphRelationships","Field:808:inputs","Field:808:foreign","Field:808:relatedForeigns","Field:808:basicParentRelationships","Field:808:basicForeignRelationships","Field:808:manyToManyModelRelationships","Field:808:manyToManylocalModelRelationships","Field:808:typedMorphRelationships","Field:808:identifiedMorphRelationships","Field:809:inputs","Field:809:foreign","Field:809:relatedForeigns","Field:809:basicParentRelationships","Field:809:basicForeignRelationships","Field:809:manyToManyModelRelationships","Field:809:manyToManylocalModelRelationships","Field:809:typedMorphRelationships","Field:809:identifiedMorphRelationships","Entity:77:foreigns","Entity:77:pivotRelationships","Entity:77:pivotMorphRelationships","Entity:77:basicRelationships","Entity:77:basicRelatedRelationships","Entity:77:manyToManyRelationships","Entity:77:manyToManyRelatedRelationships","Entity:77:morphRelationships","Entity:77:morphRelatedRelationships","Entity:76:authProject","Entity:76:cruds","Entity:76:fields","Field:794:inputs","Field:794:foreign","Field:794:relatedForeigns","Field:794:basicParentRelationships","Field:794:basicForeignRelationships","Field:794:manyToManyModelRelationships","Field:794:manyToManylocalModelRelationships","Field:794:typedMorphRelationships","Field:794:identifiedMorphRelationships","Field:795:inputs","Field:795:foreign","Field:795:relatedForeigns","Field:795:basicParentRelationships","Field:795:basicForeignRelationships","Field:795:manyToManyModelRelationships","Field:795:manyToManylocalModelRelationships","Field:795:typedMorphRelationships","Field:795:identifiedMorphRelationships","Field:796:inputs","Field:796:foreign","Field:796:relatedForeigns","Field:796:basicParentRelationships","Field:796:basicForeignRelationships","Field:796:manyToManyModelRelationships","Field:796:manyToManylocalModelRelationships","Field:796:typedMorphRelationships","Field:796:identifiedMorphRelationships","Field:797:inputs","Field:797:foreign","Field:797:relatedForeigns","Field:797:basicParentRelationships","Field:797:basicForeignRelationships","Field:797:manyToManyModelRelationships","Field:797:manyToManylocalModelRelationships","Field:797:typedMorphRelationships","Field:797:identifiedMorphRelationships","Field:798:inputs","Field:798:foreign","Field:798:relatedForeigns","Field:798:basicParentRelationships","Field:798:basicForeignRelationships","Field:798:manyToManyModelRelationships","Field:798:manyToManylocalModelRelationships","Field:798:typedMorphRelationships","Field:798:identifiedMorphRelationships","Field:799:inputs","Field:799:foreign","Field:799:relatedForeigns","Field:799:basicParentRelationships","Field:799:basicForeignRelationships","Field:799:manyToManyModelRelationships","Field:799:manyToManylocalModelRelationships","Field:799:typedMorphRelationships","Field:799:identifiedMorphRelationships","Field:800:inputs","Field:800:foreign","Field:800:relatedForeigns","Field:800:basicParentRelationships","Field:800:basicForeignRelationships","Field:800:manyToManyModelRelationships","Field:800:manyToManylocalModelRelationships","Field:800:typedMorphRelationships","Field:800:identifiedMorphRelationships","Field:801:inputs","Field:801:foreign","Field:801:relatedForeigns","Field:801:basicParentRelationships","Field:801:basicForeignRelationships","Field:801:manyToManyModelRelationships","Field:801:manyToManylocalModelRelationships","Field:801:typedMorphRelationships","Field:801:identifiedMorphRelationships","Field:802:inputs","Field:802:foreign","Field:802:relatedForeigns","Field:802:basicParentRelationships","Field:802:basicForeignRelationships","Field:802:manyToManyModelRelationships","Field:802:manyToManylocalModelRelationships","Field:802:typedMorphRelationships","Field:802:identifiedMorphRelationships","Field:803:inputs","Field:803:foreign","Field:803:relatedForeigns","Field:803:basicParentRelationships","Field:803:basicForeignRelationships","Field:803:manyToManyModelRelationships","Field:803:manyToManylocalModelRelationships","Field:803:typedMorphRelationships","Field:803:identifiedMorphRelationships","Entity:76:foreigns","Entity:76:pivotRelationships","Entity:76:pivotMorphRelationships","Entity:76:basicRelationships","Entity:76:basicRelatedRelationships","Entity:76:manyToManyRelationships","Entity:76:manyToManyRelatedRelationships","Entity:76:morphRelationships","Entity:76:morphRelatedRelationships"]}